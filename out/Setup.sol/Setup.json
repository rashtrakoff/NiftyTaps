{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tap",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "superToken",
          "type": "address"
        }
      ],
      "name": "TapCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkAllInvariants",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkLiquiditySumInvariance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkNetFlowRateSumInvariant",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "fillWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_amount",
          "type": "uint64"
        }
      ],
      "name": "mintSuperToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "mintSuperToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "mintToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_amount",
          "type": "uint128"
        }
      ],
      "name": "mintToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "checkAllInvariants()": "4e86f14d",
    "checkLiquiditySumInvariance()": "fce95fbb",
    "checkNetFlowRateSumInvariant()": "f8192aa1",
    "failed()": "ba414fa6",
    "fillWallet(address)": "50d60674",
    "mintSuperToken(address)": "8b53e825",
    "mintSuperToken(address,uint64)": "320d9364",
    "mintToken(address)": "01173a74",
    "mintToken(address,uint128)": "fe24996a",
    "setUp()": "0a9254e4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"superToken\",\"type\":\"address\"}],\"name\":\"TapCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkAllInvariants\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkLiquiditySumInvariance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkNetFlowRateSumInvariant\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"fillWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_amount\",\"type\":\"uint64\"}],\"name\":\"mintSuperToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"mintSuperToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_amount\",\"type\":\"uint128\"}],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Setup.sol\":\"Setup\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":protocol-monorepo/=lib/protocol-monorepo/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Common.sol\":{\"keccak256\":\"0x3ed7f49e907eaf339c3bb0b79a81d303d0f9e37aa5b8a9854c0cbfc3ad9a3ef0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c2532fb5fea32c6dc165518f2c4918af25d9139d17c11da330414c9797a70b\",\"dweb:/ipfs/QmV4r8a1e9Rgu2xoigVCuSv3fZ737wD2DXbV6ZmHXVUtDn\"]},\"lib/forge-std/src/Components.sol\":{\"keccak256\":\"0xd3b8ba6df58174d5d650a668dfa49eeee28b2b855514b9e793e1c0b69d747149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cce2b2ca79d5ce993b91358ed3d588396295e0aba9bb923481c1ffa5058a0dcd\",\"dweb:/ipfs/QmPNymteQmLWk7SqQhNsF6Rbc3xFPY7xGb4fBKravHLXD3\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d\",\"dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x9e421049151727ad09416e8d85e9bab277971f2ff750f230f50ef3c22ee40532\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8309e82f8020f4936d10b800b6166b28c4ea21b6f25d670b6735bd5d664ded3\",\"dweb:/ipfs/QmQP9d7uDsUGypHuc5LCd8zD4TsmvSqRUEqX2npMo6NLiQ\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x628980968342609e2b6f4050cf6ffab5456f6e274cb237d70dd58f6d77c9325f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e2691f7fc2e97ebbf63db590aa95ad8c074785e48b864dac7eed3232949af58\",\"dweb:/ipfs/QmYSdyV3w8SNUtE521bn2ymVArPu4z5wToxSVqnRKztygH\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a\",\"dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xdfdea2fc16ca475b82c74ef8a1ee50249a086ea3e1d7dcb2fc5b507f2b69500b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e68c4ac142bfdcacfc1a3ffadb63e67213464be620b277586ccf74605ccc33d3\",\"dweb:/ipfs/QmXAiLV8LT4h4z6x1xc88BfJpkddSdGtQkBbtPf441MCqi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6dc670615c9d04adf786ed4f18095b2142311c93dfda6459732da919d9113c17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4eb56f37ea1c9bb72d2064b5e8fd134dd871dd0a9a3e081995c0fa52dd82c74\",\"dweb:/ipfs/QmbQZeD1RfPWjUSZ8iEdUYoLBn1PuSHvSYzZ7V9rLrRK4T\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1150e9142b7dd9bdac8cd8fda84c17013642c4289831c5d1b48eab749302995b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca88c973e29364c211a59fa58546ff5b69060597e5d088df58f912c932dc5105\",\"dweb:/ipfs/QmeFQ44BeqNUwJi37jnfoWJyxcmajEmAEyak3XugF6Udzi\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa\",\"dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x07cf8d783adf28649b2ec21c55dd14941b5c779e87d19b6233fa1cb0debe2f71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3752ae12fdcfa26302c48e93103a6951e545842f836c368860f5191d7eee2b46\",\"dweb:/ipfs/QmeJMaAv99yh5WJHcHnt24diZREjMab4wBptkETwxNfyaq\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x6a5307574ef7a2421da872734ac4708d51704cad2a1a59735d1bedca9213b6f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7baf1cd3dc4875830923984f9dbdfa2f22c9969dcb7b27c7178b98617e6725a3\",\"dweb:/ipfs/QmRwMbdZhxwqhscL8oAm2H6fPSiPpJEF7DZXp9jSz8Whnh\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x99318be83183b499d4f32a6f1a806b087e46622a171630b2d499d7f10a8999c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a0ae547ed1e5d7f24cdbecb771e1274f2bb33965eb74261301655503c42971f\",\"dweb:/ipfs/QmYjHKwb3tj7YveT2R7ADuPacSwoEYdafwAqzRk4dK8kan\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xcc16ee5c361f3ecd7ac658165f689059702bb0ddfc2fd2fb165ceec63fbd963f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e74b71a60d168675eca669a0f319d11ac9d248eea157001b7890db0b537c197f\",\"dweb:/ipfs/QmW9gwb1n7D6U4PLVqHkvh5gY49FWjXu4uYtkjLbe49vUE\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x086fbe904291497e1532ef340f1bd589078f49e3d4d0bbfd88f5e02fb89261eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0df1e3e965b78a0d98dda2d1d6a6acde88f515b1d3a9ad02f505e93fa7babeda\",\"dweb:/ipfs/QmW4cSbGriRAj7XRZu6zSaqspe4eyYWkF7WfJbj3rmmLbk\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x6e17345a3755b791d0fce8ee08cc16ad340859d21617c225fd9e4ca8b2282553\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6109b1f30eb35aff8dfa06cc87319b8b4cb568bb6797e427baf215dfd6de3a1\",\"dweb:/ipfs/QmYQW3GK6X7EJwhtw7zhaufnqufF5hBqm8GhoKt9wCr2im\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18\",\"dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Create2.sol\":{\"keccak256\":\"0xf67a8af2ecc48460ff76211a4a2ca0c340a35d28081caa8285d5bfc918633a08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92aa23b0e43c14df77a2f9145f13f12d8902b59746b1e148cf8283e5de3aae61\",\"dweb:/ipfs/Qmakyhc13DNpsG3YjVqGvfwXRy4FcEmhbXk53Bzdko4AQK\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0\",\"dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x99c728ced6b04a36a3184c6bb80240a8e2e3c9020e6496a13754580f39610f7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32741874595e1ba36efd140da1d3c2e74a840b95c3df4d79a91587858352a332\",\"dweb:/ipfs/QmWQq3j2QSRCmnnKE4dvbauDSLBtNUqWJiG2hw2UPy93iZ\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbb9b373ec337797b9f8822171cb191095cb11e729a4fde4c207d25b8b642fb93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fba7f4448f95e3a42fba5305cc02403eee23aa62e742a0ae7bca609bdaf89da\",\"dweb:/ipfs/QmSXV5FapsVemawU9Zzkx3u3DNLhCaS9MnwcZLsPpMSKnz\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\",\"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x636eab608b4563c01e88042aba9330e6fe69af2c567fe1adf4d85731974ac81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e35967fa779d58a99de2f6d7ac23ef489d09bc18a5668fd231753905e0a9f633\",\"dweb:/ipfs/QmWUSbnhG7z4fDUYMbCuyJ4nyhqKwzL2jbeFEnVLDxo6R6\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/agreements/AgreementBase.sol\":{\"keccak256\":\"0x55226d79da4c2d6597f420b8b1bb3df321475619a487ff9b18272e4f838e0c12\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://28492238836ad93316906ed420d96fe37ae0077068a26464bb7750e564d68129\",\"dweb:/ipfs/QmT4MzY9T3VNtCkGZeJQNzJagMJQ1RpQa2ZjTTYuYatvM9\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/agreements/AgreementLibrary.sol\":{\"keccak256\":\"0x745e0e628bff094cfae1d6c00bd4539dfb5c93425f89f03bb4a7ead9a33a7475\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://2859a6c2c93629fc0062cfa996d79ca68db18cbe57f367354fc770c3ee265f4c\",\"dweb:/ipfs/QmVfKb9Lmqicrhm72EFNVe8WuEA2T6RQpwUrpN6AggTQ6A\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/agreements/ConstantFlowAgreementV1.sol\":{\"keccak256\":\"0x3957c2b4165481ab647108db71adb9c2973d898934d6e10dab33147367379da7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://199bd848db470c9611af5e00aa8e0efa5c54f7c470ad4d29ca8dc73c4ea5fbd3\",\"dweb:/ipfs/QmeG1bbPa4QyPh93wwdLpV3DhkDwD5LtPA1WmP7uZHH7Gv\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/agreements/InstantDistributionAgreementV1.sol\":{\"keccak256\":\"0x864ecf7869c033a17205cff47a1a1b97f2b2cb86c19b4590c65ecce1915eb448\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://31a6e4c3012c7cdfec5ff3a26702a3dd1ed325c8924405216e991de535d781a2\",\"dweb:/ipfs/QmbDesyNjFVr5BYS4jupyk2NbMsPstbHbRLXv1MLot74oX\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/apps/CFAv1Library.sol\":{\"keccak256\":\"0x5384b9a56711ce7b72405c653ff8be3bb94131428919b380248e10f1ddb252de\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://979aa0e84f86851125d7ad79d7f974681c91680139e65ae426fee12671f81ca0\",\"dweb:/ipfs/QmVk59WkCeqaUVRBeiCfftVstSXugXgyXMurEeAicAx3du\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/apps/IDAv1Library.sol\":{\"keccak256\":\"0x6ea8462f8acd24e4f31aa1e0e78df01d6d47279cebf306ed2844114c06c99fca\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3a089417a435c8602e8100ac3365f4e447b1babf1a9ab226d4481fd698928783\",\"dweb:/ipfs/QmSbbrrojn4yZ5BEWd2uNLif6ifeJT1XPuyYp6529kM2RP\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperAppBase.sol\":{\"keccak256\":\"0x54003e523c7ed6d3e8b5aa3f7c80617d8ee1155554f31a1bf6e3fc3eeb634fd4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fb28386a17c82af817ef65fbdf7b2210bd33eab9b3f93a1956155a13eeb22de8\",\"dweb:/ipfs/QmSWp559q5UEKryeqUyyheAPvrLB6NaAjZbbRHMqY8cXkA\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/gov/SuperfluidGovernanceBase.sol\":{\"keccak256\":\"0xf6a2e9fb605d7e48c8038c3cd44d69d278b6321787003f12327a3ed21b481e0c\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://07d31eeec55ca74190f1fc34a6b96828a4706ec13ec2f8aa6e112c60fc74f323\",\"dweb:/ipfs/QmPeLA2rKZKsjXLw9JAHGupGPpMSvfu9iMbbvGuPMKAxAi\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementHook.sol\":{\"keccak256\":\"0x908b492d11c73d5f7f1707b3faf8e29aa5b6b35618b40e4b0c8f68873cbcf69b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6c7f2f71936ff6dab1f5c854f2d4fa5d37b576c0e904369ea240d96eab58781f\",\"dweb:/ipfs/QmZJCdchrpjZeuCZBo7okXnjxLFheLJcXvWqxLkxm5V5fv\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0x6b8501cde10ce06296268facb2b504765995eeb948434dbb6292b30e0852a757\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://0ea0a9865ca170dd4b8dd63d298b8b0dc73910242dad0ce567e6a68400c0df0f\",\"dweb:/ipfs/QmfUy1FXn6a6JZW4qE3RUudD1fH7BErNTDTgEPwEcdWCVg\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol\":{\"keccak256\":\"0xbc9f5e8443c87704b76588aff87ec8403f2071a7471a4d088e63057146b0f103\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://08df7df0291f21c6c891a5e98839a1c0538f8d3d741ede49a91a6a43826263d1\",\"dweb:/ipfs/QmaeQeHVh6AkY9kTnxVkioEDVhpHm3HW7VBV6EqZTbdmrc\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/CustomSuperTokenBase.sol\":{\"keccak256\":\"0xadca56843852b2bf7afe424cd068cd2142246813f81505d083293ae2247c35e6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://208fe654adaa9d3a994d508613ecd1c18ee8aeb9d3bbc9fae168536b7405f16a\",\"dweb:/ipfs/QmR7EyiSxZ9Qn1Fpq8U5WAsMdpjsm6Ypt5LhhxeoDkvANY\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x78f553c8b63ca0b8ca892e3461aeb2d176f0b5e574ae0ea616bbb70d33d5e5f2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f2e9a8f5df9cf5b8326cefa666abc21c41fd09fd4ea3fd73a55b1346fa1693e8\",\"dweb:/ipfs/QmPNrMzHNpE97SwHwjXhHCttKQQSt2oYUforvPenVuemRJ\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e\",\"dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0x84bb6579908dcb80621e089da34eac2a06856a90bc384710a7c8df07a70d0995\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3809d93a1cfacdec425c277c519db137b86691459533956ecd18120bfb801ed0\",\"dweb:/ipfs/Qmc66ovCtVYANKH76iv8a58u1FQ3yKVKBVbK1aVk2RZzRT\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0xb50180797117711b1ecf7adf628892016ad864d2321bfaf7eaf43901b5394946\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://4121ed7bf52de22702cc42972fecb37c7d0461834ab3c601b32dc737789fde4c\",\"dweb:/ipfs/QmaU1EWAzfzmiazMfuSJMybKMVpyoc6DyUPJpxQCc8UCxb\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x41464648136cbcd34b7df28471eca470f67c80409b2ac01b202ac7092ead4890\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3dc4cf90b882903e91a0086268a09b541ac0255d6a872a97de3cd81b1ee14885\",\"dweb:/ipfs/QmbF1HfpQ854hhmjc5xqiauevFEZhKWMFHUgDTH1VZXrkQ\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x647f623df16dfb57d0d380bf6aada5f1d9bcca88ac0ea4f998d7159ba8da95e1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://95d49cf7a3b14214ad231746171d02c0019bc0ef291250f2d68998c7de82069a\",\"dweb:/ipfs/QmbSUAHoEA8iMres2heL2wCnKSRruD92Qd3eMNzr4w8kMW\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0xa94f5ad95da2716a21cf6a0c7861ce03ba70c6931cfc8a9bcae741881e489a99\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://2eee2bae93ce8aae1e75aed6153e3d46f2d0c3462f47d9a99713054fff71bc80\",\"dweb:/ipfs/QmVh5HDeJo3p4rUV45RVCBGFpEN2G3gwL7ADT73csPnj5Q\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/IPureSuperToken.sol\":{\"keccak256\":\"0x9b1033f113f4b878fc4a026114637faf2f45cca06dcb276daeab89140370b7d4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://13baccb28cd40eabf2ee39334c678774d4ea0493def12511bd44593c113b802d\",\"dweb:/ipfs/Qmf4Qne5yXwmiLZKFjhTwAiRg8pBxE4ixvPEC5DwSjDMbS\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol\":{\"keccak256\":\"0x03d0c332b2dec2453fe1dfa879cb40cba5075a02f4b08740f0e6ba10f80bd577\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://c66ae1ec3af394f3062a8125068d94272527d982ba0da94811ea308793d29364\",\"dweb:/ipfs/QmdGKjBHQSoRLMuWHwcXibftc9gYA3wxg4L9Htqog1rHVw\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/utils/IRelayRecipient.sol\":{\"keccak256\":\"0x48be4e1e60309d0dda0a0b41d7f3c1cbb69165aafd5de020c30ffef2c7fe710e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://662d81566b9035066141f1de7acfd04681b7192bcad19779f057ae0207aae96b\",\"dweb:/ipfs/QmQuahuqDrnccGdZBCgWMjV8mfVLJBqngr8yhTDwdvkyzw\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/utils/IResolver.sol\":{\"keccak256\":\"0xfdec27f82b1d1e5b721ca1256e9f1ecace22bda219ea5afcf5b92b13376996ab\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a892259cfc02cc286c5b5a6a951df3883eca62367731685154fed2b76728a71c\",\"dweb:/ipfs/QmTbjWsLvdQo7rkMaAHXiLMyLdjxG6Qs9voky7yDa1H2NW\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/BaseRelayRecipient.sol\":{\"keccak256\":\"0x462c2d9dd499c3f0c821ba4018f7229e34f257c7470cb44a69d89874d8c4fbf6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bea7b32b18db1871f91a5f7c993f19e900b5b3e2c5957ed043be5e54e5539176\",\"dweb:/ipfs/QmRaDM8skYxNVrJiRHiQHPfbYewuUimTfDoMcBMwL4DXSq\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/CallUtils.sol\":{\"keccak256\":\"0xe1670a24ad6ce7202c7e3d944916550bc9cad8775ad4c170e25796e647f40100\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://27cbc0bab7342e7d4ee6e4921904a67836ee19c7b8cd0a9e3e1efebd568d4666\",\"dweb:/ipfs/QmSekS5WnwUQ9Qs1iVE2NdQHv6z38Xq19pG9mvNb9CY3uT\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC1820RegistryCompiled.sol\":{\"keccak256\":\"0xf7abf6b327a28d39b1b23ed910c0c7c061e61befa4f38afd34b748fa880329ef\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f4e844d3d74ac0b3a7702014328e89da762b2157598f4eb567f009dd5e5d4e7f\",\"dweb:/ipfs/QmaYURi3U9JQHELK3h3d5m9ic28kWc3mffXJmn3fE9Fiau\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol\":{\"keccak256\":\"0x785bacfcf288c9b1e3cf40bd325e02efc76e8e43f3fc10d29901ce94c2675f41\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e4ab86efe2b4ce259448bea9c8d97c13568e8447abbd49b90ed1aa60beebfd5f\",\"dweb:/ipfs/QmVS19CDpyUE7wdMejpvcusNX2Ufw9U7h93KrTDQKgKrWq\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol\":{\"keccak256\":\"0x20e4df2eb573a690a113afcb014fbcd68a8e622cff483bb0940a99e5b3b044ab\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fc7d9593f15b9e03622ed5bf666ad41a69ea21e18fab0db2d2f3eeda522f7fe0\",\"dweb:/ipfs/QmRx9EKRFa34LbVyU1mjyyvFMnBYN7jJtQhnXsLA9PimCP\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol\":{\"keccak256\":\"0x0e0a0dce20709b28c2df39a8203ce03cf822a81cbcdfaa1e682d0911ded4d42c\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a70c9a48e373004db224afe4dea22c993914ba3dd2da3f3c92d6278cccbd6c0\",\"dweb:/ipfs/QmaGMr7xmiTn31RjgTZgYriSCTxXdXVVDK1ZHf26JjzBMB\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/SlotsBitmapLibrary.sol\":{\"keccak256\":\"0xec699ed1ce16cd82d6031dafae26b72a23f8830fe81ff46313355d8227224de4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://499f55d7ca02f6707717464ad26a39e36f32ce8e9033e882aed26e0d08f19930\",\"dweb:/ipfs/QmeGmRg3PFbVB2XSiPSddiUHHa1BPm6Udp8aQSZrF1ZF2k\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/FullUpgradableSuperTokenProxy.sol\":{\"keccak256\":\"0x3c8dc965e5ff9a3b20031f8f342927a1a892d9a0317162faa326b274ea86693a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://455ca72791cdfdff8f10b85b442ab472ef625e9b75698bd69880ff8d4aabae35\",\"dweb:/ipfs/QmUmcFLgzbTthqewiZbVgUKPudDT4sxdcLjWjrosrgnUXW\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperToken.sol\":{\"keccak256\":\"0x322b255f3831b3cf6078199e32c428e31356843813fd8e84eb8c861162303906\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://ef819d17144ff3d33050f4d89f0bf71dba64cb67250c38472c5fced71d317258\",\"dweb:/ipfs/Qmac1jzPRmeqeSAGikV5T6yZFSfsBgtgr6m14NtFsvRWVj\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperTokenFactory.sol\":{\"keccak256\":\"0xb5a43bd628f7c3be1804b69be5e6d1b8a7aab07fa07a00d6481a65fc67d807c2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://557a4d49b83d101ec942699a63d6061690d6192bbc118ec1fe6a1265ffb16b51\",\"dweb:/ipfs/QmQNsYzexFPvF2ZFDuxoAscokPFc236onrLkGPdZP3tk6Q\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/Superfluid.sol\":{\"keccak256\":\"0xdc2cf2908004059b6b148643e5110a9f1636d6b9cc221d7c20cb00d0b3aefdcf\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://386a1c038f3f622bcf8056a6410ff3c70f61fd0ea0b045d6926ca72d96d7366a\",\"dweb:/ipfs/QmZNgpDhnKEn5gPs9TWPuiD2mr599FgAJMD6xfL8huM66i\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol\":{\"keccak256\":\"0x8d09c18f0b1315189bcc91c797760792ec9a56ef9c1788f73ffbea2f2b006c2e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://c3b15fbe1e7b18afb1ab49e4c4f35b9231f4563fb6ba122d93ec488eee092e73\",\"dweb:/ipfs/QmYVicfTymcAm5vsFwEnC9raHYRssqjV7A2qyTp4aJWdHH\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/tokens/PureSuperToken.sol\":{\"keccak256\":\"0x511c6ba485f4fcd8f5969e85256c2fddebf9d1757c3bccaebb5338e7beb12cb7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a43eca8cf3f5d1a375ec67417950a376152fc7cd30aed5da998e465d241b62cf\",\"dweb:/ipfs/QmZXYr2PyWt1Bqzy7EK7DB429563vEMNChXYcAWPyZhX3d\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/tokens/SETH.sol\":{\"keccak256\":\"0xcf8929539936e29c3fbe5ab9a71a6c6c24b430b44127e666db8b535af2427a82\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://66647881b983406157513f4576766c12799f1e8a7d84a1ae32482ed8318948c6\",\"dweb:/ipfs/QmPCEP7wPV9pdELrECGGpdDCzXVdYzvc1dEFvx88cJYQ5W\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol\":{\"keccak256\":\"0x368ba82f761822466ebc49782b99c9eaa2664e7d4582fde1cb38098ee9926f71\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://02984681098e314734e18fc14ffcdbf9cf2bd079fb5735af75c44b5641f0dcf5\",\"dweb:/ipfs/QmedH2QB6VkyJ8Kw1tQC2E8VDF3u23U2eT5tP6VGY1KwBP\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxy.sol\":{\"keccak256\":\"0x0c19ed3efb257bd01be01246c01be124d803fa294a443ff3c0d0e99c0f16d661\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://d683daeca511b25bc107ac14fa3b95df11537f073a93bee5947adcdd99d4cace\",\"dweb:/ipfs/QmQUzftmLtpMPZsVa2DYVbZW9BqPPDUr6vBH7xmjwJQf5C\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol\":{\"keccak256\":\"0x6dd522f9867e769a945cea48a15d63488cdbd19091ed38adc95b43a70129b349\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://ed451eb0ed865b2d2338269134236d59ceafe4685d4b5df68843924620f6b715\",\"dweb:/ipfs/QmVr7hh9mnmfFzoJd4oXmuSfkXL2a4gdAKoRYXMfe3BFaE\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/utils/CFAv1Forwarder.sol\":{\"keccak256\":\"0x616206de4f183b73b08742e93473c8c3c6b0446197728bcbb01c84cc8d01d951\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://7eabc658eed43e05ffc7851d07182a86900921448dc01f86d92676d34f50df13\",\"dweb:/ipfs/QmRWtcJAvdkBQfPSroYccCSHBN5yQnNdsMmTnQqdqawpJs\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/utils/Resolver.sol\":{\"keccak256\":\"0xd7527d36f85691078932f6a3f96c7323970498a9dedc47c0afce2d6391dbbae1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://7d0929208143ed2a6222436c3521e987114f0402e7e1eb7f6c498ae6fde640e8\",\"dweb:/ipfs/QmbeANPGN8ufWNEHzBxUTSAsfGx6NXAvhCVR4WNVso81Jy\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/utils/SuperfluidFrameworkDeployer.sol\":{\"keccak256\":\"0x0fbd4e754e5caab089f6b3f6dc639ce90c2ccf1e1415eb20e12a1611a992e1cd\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://78a17317eb81f2df4f4f99eaf06af4db29a0195f5a2a2cca94419e5f8009b66f\",\"dweb:/ipfs/QmPzTicUYZGak6BLYwNFVKyJMV6q1f2iYiT9uTP5FcTRi4\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/utils/SuperfluidLoader.sol\":{\"keccak256\":\"0x166f5ec215a1ca46102fe1339a33778c44e74dc63afcef5270c77e6700e4f924\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://266bcd75f95916f472d9b9ac98d6128a24544bce871f90edc8e998dd676e06bc\",\"dweb:/ipfs/QmP7MKLRTUy75bspei6r8YmKdaaesRghn9ehrd2Pt24Udj\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/utils/TestGovernance.sol\":{\"keccak256\":\"0xce9231c87c4b4baeb1b98a92668d085d3a396e866d1f693a6c8b250638949e1b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://db7e44eea0379748fa75dbe9238bc4f256b2752a1fd598be5033f75b2d5d916f\",\"dweb:/ipfs/QmVdvJPte6c9KqZaiVMi8HLqwMXXUqDMEJAtYNDUPxURQo\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/utils/TestResolver.sol\":{\"keccak256\":\"0x84ab812b2de23a611866bcd2d16a90658b71919ec005033530e85832513124d6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://4ee0bbb1e70ea3cea1bfd5e31f8417645e6091d4559663b4f9c3bfc663a80c7d\",\"dweb:/ipfs/QmSjmuWt1CHp4j1kWm5Kbx7JTrEZMdjgcAWQCkYa2c6McU\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/utils/TestToken.sol\":{\"keccak256\":\"0x41cd8061b059c317fe1581e1cffb00670e5b69929c1a27d4a2002b135b5f3ade\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://d3d2f66f2b93c7da356d2136d6e6c4b80630c35c272b2280d2b332abb2f5a601\",\"dweb:/ipfs/QmYDJu3zMMpyXDHjLPoqJggQFbzemiqkRwfLwfDQaBRQCL\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]},\"src/Tap.sol\":{\"keccak256\":\"0x548135b9c86bc0553b3d5c65cca4caddb7cb02281619c2fda8a25e4a171869c0\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://ac2c092e2762eb8641e98d9ccc1da22ad75c77400f4a1613932aaf9ba9923cd9\",\"dweb:/ipfs/QmWNi8nYm4dr5rFi9pBWbjDRQEbyyMDeBSTFsynDFeSyDc\"]},\"src/TapWizard.sol\":{\"keccak256\":\"0xc31fa144f059d8bd4ba2a8c0b364204ff7247ef97dc9c7f0c479ab4cf77c91b6\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://6dc29fe8ad3ff1aaccbe6cb089a0c5eaa560781670f4a497f1b3c87ab27608aa\",\"dweb:/ipfs/QmZkd7BAKzy6c6xFbcajs9ozR2vhToBqZjHciYSj4UsY4z\"]},\"src/interfaces/IERC20Mod.sol\":{\"keccak256\":\"0x37d8289a288d75dffb8d0472c3acfb4bd9b9866a8a8df2ca1b2a33e69f3d0861\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://9818c52f971ca861ebeaf7e0d0afe5313e49a65d06db1ca8838d34de48bf9334\",\"dweb:/ipfs/QmTi1ANkMySdaUxtdJoDe2DBDnN1SZxLksbsttYL3o11iD\"]},\"src/interfaces/ITap.sol\":{\"keccak256\":\"0x5a16d09b1d21f86357aa9031df30d46e306f864b95d6af6d198cbd031f631c6d\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://335da12e842e0539f2f19c2fff8780e90a4ab724805a3a3f91f8f28dc01e6964\",\"dweb:/ipfs/QmP2ZdA1Eiw8YBNENV1BgkZAmmuWMWs8jrpR9G73xE2z48\"]},\"src/interfaces/ITapWizard.sol\":{\"keccak256\":\"0x47245acc75a4eac8a4deff88851e7a1859e903e829037423492bddac0aa56e2c\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://f9c6d456a451dab35f9eff21919a2d5e2bd3311b954e87f4e43e4bb1bacb3e44\",\"dweb:/ipfs/QmWg6REYFwGxKjqUQ8nnGsV1XnPjKUZJzP69viH7GBKd3t\"]},\"src/interfaces/IcfaV1Forwarder.sol\":{\"keccak256\":\"0x93e1acfd961d30da03d31d5cf0e6621f23f6d0f618c669a4dc9aa9d9f2778dd4\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://a92361a2eb3fa033f2a6193c9b68dcd07db9e0130a52c640db9b1b8cc8d409eb\",\"dweb:/ipfs/QmQDZS4t5tPrDXHznSG1PtuBp38vVFDM9W9cc4BSNr4N7i\"]},\"test/Setup.sol\":{\"keccak256\":\"0x1843a27cb8e871e1671c285d37b7c98eb055980d751f8e5ae658a248b9fd3f38\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://44302b9b37fef1c749a245f4f52a11a051bf513a4356e9f45c25b41e957c0f80\",\"dweb:/ipfs/QmUBgGSiNgUVvxTjpLQB2DbRQ3DWrNBJycy2K6tLUe1wqG\"]},\"test/helpers/FoundrySuperfluidTester.sol\":{\"keccak256\":\"0xe0bcbb8a71849bf723be911f04d23e9215a76e0d51b213c0ee1840d7c806acfc\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b6afde77b19df16e169d3fd03743e6e03c9f55cd5fcaa136e9c7981ee732be21\",\"dweb:/ipfs/QmdXfn47K5UR2EWpq2yz3JpbT2s8b67uT7nLEBGN17zq4d\"]},\"test/mocks/MockNFT.sol\":{\"keccak256\":\"0xb4d1448db88b874c3dd175a763477cdf3c471b0634bc30ce3391b31f3851fe29\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://81f52971324528ac0519d949624cff3483eacc0e924a03dacedca5ee7bc4bbd4\",\"dweb:/ipfs/QmeuR6ssKZgoU6hzAXV7qXriNeVo67fTwzhSQ1AefFLd1r\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "tap",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "nft",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "superToken",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TapCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "checkAllInvariants",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "checkLiquiditySumInvariance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "checkNetFlowRateSumInvariant",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "fillWallet"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "_amount",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintSuperToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintSuperToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_amount",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":protocol-monorepo/=lib/protocol-monorepo/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Setup.sol": "Setup"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Common.sol": {
        "keccak256": "0x3ed7f49e907eaf339c3bb0b79a81d303d0f9e37aa5b8a9854c0cbfc3ad9a3ef0",
        "urls": [
          "bzz-raw://01c2532fb5fea32c6dc165518f2c4918af25d9139d17c11da330414c9797a70b",
          "dweb:/ipfs/QmV4r8a1e9Rgu2xoigVCuSv3fZ737wD2DXbV6ZmHXVUtDn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Components.sol": {
        "keccak256": "0xd3b8ba6df58174d5d650a668dfa49eeee28b2b855514b9e793e1c0b69d747149",
        "urls": [
          "bzz-raw://cce2b2ca79d5ce993b91358ed3d588396295e0aba9bb923481c1ffa5058a0dcd",
          "dweb:/ipfs/QmPNymteQmLWk7SqQhNsF6Rbc3xFPY7xGb4fBKravHLXD3"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d",
        "urls": [
          "bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d",
          "dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x9e421049151727ad09416e8d85e9bab277971f2ff750f230f50ef3c22ee40532",
        "urls": [
          "bzz-raw://d8309e82f8020f4936d10b800b6166b28c4ea21b6f25d670b6735bd5d664ded3",
          "dweb:/ipfs/QmQP9d7uDsUGypHuc5LCd8zD4TsmvSqRUEqX2npMo6NLiQ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x628980968342609e2b6f4050cf6ffab5456f6e274cb237d70dd58f6d77c9325f",
        "urls": [
          "bzz-raw://3e2691f7fc2e97ebbf63db590aa95ad8c074785e48b864dac7eed3232949af58",
          "dweb:/ipfs/QmYSdyV3w8SNUtE521bn2ymVArPu4z5wToxSVqnRKztygH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5",
        "urls": [
          "bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a",
          "dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xdfdea2fc16ca475b82c74ef8a1ee50249a086ea3e1d7dcb2fc5b507f2b69500b",
        "urls": [
          "bzz-raw://e68c4ac142bfdcacfc1a3ffadb63e67213464be620b277586ccf74605ccc33d3",
          "dweb:/ipfs/QmXAiLV8LT4h4z6x1xc88BfJpkddSdGtQkBbtPf441MCqi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6dc670615c9d04adf786ed4f18095b2142311c93dfda6459732da919d9113c17",
        "urls": [
          "bzz-raw://b4eb56f37ea1c9bb72d2064b5e8fd134dd871dd0a9a3e081995c0fa52dd82c74",
          "dweb:/ipfs/QmbQZeD1RfPWjUSZ8iEdUYoLBn1PuSHvSYzZ7V9rLrRK4T"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1150e9142b7dd9bdac8cd8fda84c17013642c4289831c5d1b48eab749302995b",
        "urls": [
          "bzz-raw://ca88c973e29364c211a59fa58546ff5b69060597e5d088df58f912c932dc5105",
          "dweb:/ipfs/QmeFQ44BeqNUwJi37jnfoWJyxcmajEmAEyak3XugF6Udzi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f",
        "urls": [
          "bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa",
          "dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x07cf8d783adf28649b2ec21c55dd14941b5c779e87d19b6233fa1cb0debe2f71",
        "urls": [
          "bzz-raw://3752ae12fdcfa26302c48e93103a6951e545842f836c368860f5191d7eee2b46",
          "dweb:/ipfs/QmeJMaAv99yh5WJHcHnt24diZREjMab4wBptkETwxNfyaq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol": {
        "keccak256": "0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247",
        "urls": [
          "bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b",
          "dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x6a5307574ef7a2421da872734ac4708d51704cad2a1a59735d1bedca9213b6f0",
        "urls": [
          "bzz-raw://7baf1cd3dc4875830923984f9dbdfa2f22c9969dcb7b27c7178b98617e6725a3",
          "dweb:/ipfs/QmRwMbdZhxwqhscL8oAm2H6fPSiPpJEF7DZXp9jSz8Whnh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x99318be83183b499d4f32a6f1a806b087e46622a171630b2d499d7f10a8999c5",
        "urls": [
          "bzz-raw://1a0ae547ed1e5d7f24cdbecb771e1274f2bb33965eb74261301655503c42971f",
          "dweb:/ipfs/QmYjHKwb3tj7YveT2R7ADuPacSwoEYdafwAqzRk4dK8kan"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xcc16ee5c361f3ecd7ac658165f689059702bb0ddfc2fd2fb165ceec63fbd963f",
        "urls": [
          "bzz-raw://e74b71a60d168675eca669a0f319d11ac9d248eea157001b7890db0b537c197f",
          "dweb:/ipfs/QmW9gwb1n7D6U4PLVqHkvh5gY49FWjXu4uYtkjLbe49vUE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x086fbe904291497e1532ef340f1bd589078f49e3d4d0bbfd88f5e02fb89261eb",
        "urls": [
          "bzz-raw://0df1e3e965b78a0d98dda2d1d6a6acde88f515b1d3a9ad02f505e93fa7babeda",
          "dweb:/ipfs/QmW4cSbGriRAj7XRZu6zSaqspe4eyYWkF7WfJbj3rmmLbk"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
        "keccak256": "0x6e17345a3755b791d0fce8ee08cc16ad340859d21617c225fd9e4ca8b2282553",
        "urls": [
          "bzz-raw://e6109b1f30eb35aff8dfa06cc87319b8b4cb568bb6797e427baf215dfd6de3a1",
          "dweb:/ipfs/QmYQW3GK6X7EJwhtw7zhaufnqufF5hBqm8GhoKt9wCr2im"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
        "keccak256": "0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc",
        "urls": [
          "bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3",
          "dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
        "keccak256": "0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382",
        "urls": [
          "bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18",
          "dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Create2.sol": {
        "keccak256": "0xf67a8af2ecc48460ff76211a4a2ca0c340a35d28081caa8285d5bfc918633a08",
        "urls": [
          "bzz-raw://92aa23b0e43c14df77a2f9145f13f12d8902b59746b1e148cf8283e5de3aae61",
          "dweb:/ipfs/Qmakyhc13DNpsG3YjVqGvfwXRy4FcEmhbXk53Bzdko4AQK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e",
        "urls": [
          "bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0",
          "dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
        "keccak256": "0x99c728ced6b04a36a3184c6bb80240a8e2e3c9020e6496a13754580f39610f7a",
        "urls": [
          "bzz-raw://32741874595e1ba36efd140da1d3c2e74a840b95c3df4d79a91587858352a332",
          "dweb:/ipfs/QmWQq3j2QSRCmnnKE4dvbauDSLBtNUqWJiG2hw2UPy93iZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbb9b373ec337797b9f8822171cb191095cb11e729a4fde4c207d25b8b642fb93",
        "urls": [
          "bzz-raw://6fba7f4448f95e3a42fba5305cc02403eee23aa62e742a0ae7bca609bdaf89da",
          "dweb:/ipfs/QmSXV5FapsVemawU9Zzkx3u3DNLhCaS9MnwcZLsPpMSKnz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb",
        "urls": [
          "bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929",
          "dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x636eab608b4563c01e88042aba9330e6fe69af2c567fe1adf4d85731974ac81d",
        "urls": [
          "bzz-raw://e35967fa779d58a99de2f6d7ac23ef489d09bc18a5668fd231753905e0a9f633",
          "dweb:/ipfs/QmWUSbnhG7z4fDUYMbCuyJ4nyhqKwzL2jbeFEnVLDxo6R6"
        ],
        "license": "MIT"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/agreements/AgreementBase.sol": {
        "keccak256": "0x55226d79da4c2d6597f420b8b1bb3df321475619a487ff9b18272e4f838e0c12",
        "urls": [
          "bzz-raw://28492238836ad93316906ed420d96fe37ae0077068a26464bb7750e564d68129",
          "dweb:/ipfs/QmT4MzY9T3VNtCkGZeJQNzJagMJQ1RpQa2ZjTTYuYatvM9"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/agreements/AgreementLibrary.sol": {
        "keccak256": "0x745e0e628bff094cfae1d6c00bd4539dfb5c93425f89f03bb4a7ead9a33a7475",
        "urls": [
          "bzz-raw://2859a6c2c93629fc0062cfa996d79ca68db18cbe57f367354fc770c3ee265f4c",
          "dweb:/ipfs/QmVfKb9Lmqicrhm72EFNVe8WuEA2T6RQpwUrpN6AggTQ6A"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/agreements/ConstantFlowAgreementV1.sol": {
        "keccak256": "0x3957c2b4165481ab647108db71adb9c2973d898934d6e10dab33147367379da7",
        "urls": [
          "bzz-raw://199bd848db470c9611af5e00aa8e0efa5c54f7c470ad4d29ca8dc73c4ea5fbd3",
          "dweb:/ipfs/QmeG1bbPa4QyPh93wwdLpV3DhkDwD5LtPA1WmP7uZHH7Gv"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/agreements/InstantDistributionAgreementV1.sol": {
        "keccak256": "0x864ecf7869c033a17205cff47a1a1b97f2b2cb86c19b4590c65ecce1915eb448",
        "urls": [
          "bzz-raw://31a6e4c3012c7cdfec5ff3a26702a3dd1ed325c8924405216e991de535d781a2",
          "dweb:/ipfs/QmbDesyNjFVr5BYS4jupyk2NbMsPstbHbRLXv1MLot74oX"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/apps/CFAv1Library.sol": {
        "keccak256": "0x5384b9a56711ce7b72405c653ff8be3bb94131428919b380248e10f1ddb252de",
        "urls": [
          "bzz-raw://979aa0e84f86851125d7ad79d7f974681c91680139e65ae426fee12671f81ca0",
          "dweb:/ipfs/QmVk59WkCeqaUVRBeiCfftVstSXugXgyXMurEeAicAx3du"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/apps/IDAv1Library.sol": {
        "keccak256": "0x6ea8462f8acd24e4f31aa1e0e78df01d6d47279cebf306ed2844114c06c99fca",
        "urls": [
          "bzz-raw://3a089417a435c8602e8100ac3365f4e447b1babf1a9ab226d4481fd698928783",
          "dweb:/ipfs/QmSbbrrojn4yZ5BEWd2uNLif6ifeJT1XPuyYp6529kM2RP"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperAppBase.sol": {
        "keccak256": "0x54003e523c7ed6d3e8b5aa3f7c80617d8ee1155554f31a1bf6e3fc3eeb634fd4",
        "urls": [
          "bzz-raw://fb28386a17c82af817ef65fbdf7b2210bd33eab9b3f93a1956155a13eeb22de8",
          "dweb:/ipfs/QmSWp559q5UEKryeqUyyheAPvrLB6NaAjZbbRHMqY8cXkA"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/gov/SuperfluidGovernanceBase.sol": {
        "keccak256": "0xf6a2e9fb605d7e48c8038c3cd44d69d278b6321787003f12327a3ed21b481e0c",
        "urls": [
          "bzz-raw://07d31eeec55ca74190f1fc34a6b96828a4706ec13ec2f8aa6e112c60fc74f323",
          "dweb:/ipfs/QmPeLA2rKZKsjXLw9JAHGupGPpMSvfu9iMbbvGuPMKAxAi"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementHook.sol": {
        "keccak256": "0x908b492d11c73d5f7f1707b3faf8e29aa5b6b35618b40e4b0c8f68873cbcf69b",
        "urls": [
          "bzz-raw://6c7f2f71936ff6dab1f5c854f2d4fa5d37b576c0e904369ea240d96eab58781f",
          "dweb:/ipfs/QmZJCdchrpjZeuCZBo7okXnjxLFheLJcXvWqxLkxm5V5fv"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
        "keccak256": "0x6b8501cde10ce06296268facb2b504765995eeb948434dbb6292b30e0852a757",
        "urls": [
          "bzz-raw://0ea0a9865ca170dd4b8dd63d298b8b0dc73910242dad0ce567e6a68400c0df0f",
          "dweb:/ipfs/QmfUy1FXn6a6JZW4qE3RUudD1fH7BErNTDTgEPwEcdWCVg"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol": {
        "keccak256": "0xbc9f5e8443c87704b76588aff87ec8403f2071a7471a4d088e63057146b0f103",
        "urls": [
          "bzz-raw://08df7df0291f21c6c891a5e98839a1c0538f8d3d741ede49a91a6a43826263d1",
          "dweb:/ipfs/QmaeQeHVh6AkY9kTnxVkioEDVhpHm3HW7VBV6EqZTbdmrc"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/CustomSuperTokenBase.sol": {
        "keccak256": "0xadca56843852b2bf7afe424cd068cd2142246813f81505d083293ae2247c35e6",
        "urls": [
          "bzz-raw://208fe654adaa9d3a994d508613ecd1c18ee8aeb9d3bbc9fae168536b7405f16a",
          "dweb:/ipfs/QmR7EyiSxZ9Qn1Fpq8U5WAsMdpjsm6Ypt5LhhxeoDkvANY"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "keccak256": "0x78f553c8b63ca0b8ca892e3461aeb2d176f0b5e574ae0ea616bbb70d33d5e5f2",
        "urls": [
          "bzz-raw://f2e9a8f5df9cf5b8326cefa666abc21c41fd09fd4ea3fd73a55b1346fa1693e8",
          "dweb:/ipfs/QmPNrMzHNpE97SwHwjXhHCttKQQSt2oYUforvPenVuemRJ"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e",
        "urls": [
          "bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820",
          "dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "keccak256": "0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f",
        "urls": [
          "bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e",
          "dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "keccak256": "0x84bb6579908dcb80621e089da34eac2a06856a90bc384710a7c8df07a70d0995",
        "urls": [
          "bzz-raw://3809d93a1cfacdec425c277c519db137b86691459533956ecd18120bfb801ed0",
          "dweb:/ipfs/Qmc66ovCtVYANKH76iv8a58u1FQ3yKVKBVbK1aVk2RZzRT"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "keccak256": "0xb50180797117711b1ecf7adf628892016ad864d2321bfaf7eaf43901b5394946",
        "urls": [
          "bzz-raw://4121ed7bf52de22702cc42972fecb37c7d0461834ab3c601b32dc737789fde4c",
          "dweb:/ipfs/QmaU1EWAzfzmiazMfuSJMybKMVpyoc6DyUPJpxQCc8UCxb"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "keccak256": "0x41464648136cbcd34b7df28471eca470f67c80409b2ac01b202ac7092ead4890",
        "urls": [
          "bzz-raw://3dc4cf90b882903e91a0086268a09b541ac0255d6a872a97de3cd81b1ee14885",
          "dweb:/ipfs/QmbF1HfpQ854hhmjc5xqiauevFEZhKWMFHUgDTH1VZXrkQ"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "keccak256": "0x647f623df16dfb57d0d380bf6aada5f1d9bcca88ac0ea4f998d7159ba8da95e1",
        "urls": [
          "bzz-raw://95d49cf7a3b14214ad231746171d02c0019bc0ef291250f2d68998c7de82069a",
          "dweb:/ipfs/QmbSUAHoEA8iMres2heL2wCnKSRruD92Qd3eMNzr4w8kMW"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0xa94f5ad95da2716a21cf6a0c7861ce03ba70c6931cfc8a9bcae741881e489a99",
        "urls": [
          "bzz-raw://2eee2bae93ce8aae1e75aed6153e3d46f2d0c3462f47d9a99713054fff71bc80",
          "dweb:/ipfs/QmVh5HDeJo3p4rUV45RVCBGFpEN2G3gwL7ADT73csPnj5Q"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "keccak256": "0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f",
        "urls": [
          "bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae",
          "dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/IPureSuperToken.sol": {
        "keccak256": "0x9b1033f113f4b878fc4a026114637faf2f45cca06dcb276daeab89140370b7d4",
        "urls": [
          "bzz-raw://13baccb28cd40eabf2ee39334c678774d4ea0493def12511bd44593c113b802d",
          "dweb:/ipfs/Qmf4Qne5yXwmiLZKFjhTwAiRg8pBxE4ixvPEC5DwSjDMbS"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol": {
        "keccak256": "0x03d0c332b2dec2453fe1dfa879cb40cba5075a02f4b08740f0e6ba10f80bd577",
        "urls": [
          "bzz-raw://c66ae1ec3af394f3062a8125068d94272527d982ba0da94811ea308793d29364",
          "dweb:/ipfs/QmdGKjBHQSoRLMuWHwcXibftc9gYA3wxg4L9Htqog1rHVw"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "keccak256": "0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4",
        "urls": [
          "bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042",
          "dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/utils/IRelayRecipient.sol": {
        "keccak256": "0x48be4e1e60309d0dda0a0b41d7f3c1cbb69165aafd5de020c30ffef2c7fe710e",
        "urls": [
          "bzz-raw://662d81566b9035066141f1de7acfd04681b7192bcad19779f057ae0207aae96b",
          "dweb:/ipfs/QmQuahuqDrnccGdZBCgWMjV8mfVLJBqngr8yhTDwdvkyzw"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/utils/IResolver.sol": {
        "keccak256": "0xfdec27f82b1d1e5b721ca1256e9f1ecace22bda219ea5afcf5b92b13376996ab",
        "urls": [
          "bzz-raw://a892259cfc02cc286c5b5a6a951df3883eca62367731685154fed2b76728a71c",
          "dweb:/ipfs/QmTbjWsLvdQo7rkMaAHXiLMyLdjxG6Qs9voky7yDa1H2NW"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/BaseRelayRecipient.sol": {
        "keccak256": "0x462c2d9dd499c3f0c821ba4018f7229e34f257c7470cb44a69d89874d8c4fbf6",
        "urls": [
          "bzz-raw://bea7b32b18db1871f91a5f7c993f19e900b5b3e2c5957ed043be5e54e5539176",
          "dweb:/ipfs/QmRaDM8skYxNVrJiRHiQHPfbYewuUimTfDoMcBMwL4DXSq"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/CallUtils.sol": {
        "keccak256": "0xe1670a24ad6ce7202c7e3d944916550bc9cad8775ad4c170e25796e647f40100",
        "urls": [
          "bzz-raw://27cbc0bab7342e7d4ee6e4921904a67836ee19c7b8cd0a9e3e1efebd568d4666",
          "dweb:/ipfs/QmSekS5WnwUQ9Qs1iVE2NdQHv6z38Xq19pG9mvNb9CY3uT"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC1820RegistryCompiled.sol": {
        "keccak256": "0xf7abf6b327a28d39b1b23ed910c0c7c061e61befa4f38afd34b748fa880329ef",
        "urls": [
          "bzz-raw://f4e844d3d74ac0b3a7702014328e89da762b2157598f4eb567f009dd5e5d4e7f",
          "dweb:/ipfs/QmaYURi3U9JQHELK3h3d5m9ic28kWc3mffXJmn3fE9Fiau"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol": {
        "keccak256": "0x785bacfcf288c9b1e3cf40bd325e02efc76e8e43f3fc10d29901ce94c2675f41",
        "urls": [
          "bzz-raw://e4ab86efe2b4ce259448bea9c8d97c13568e8447abbd49b90ed1aa60beebfd5f",
          "dweb:/ipfs/QmVS19CDpyUE7wdMejpvcusNX2Ufw9U7h93KrTDQKgKrWq"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol": {
        "keccak256": "0x20e4df2eb573a690a113afcb014fbcd68a8e622cff483bb0940a99e5b3b044ab",
        "urls": [
          "bzz-raw://fc7d9593f15b9e03622ed5bf666ad41a69ea21e18fab0db2d2f3eeda522f7fe0",
          "dweb:/ipfs/QmRx9EKRFa34LbVyU1mjyyvFMnBYN7jJtQhnXsLA9PimCP"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol": {
        "keccak256": "0x0e0a0dce20709b28c2df39a8203ce03cf822a81cbcdfaa1e682d0911ded4d42c",
        "urls": [
          "bzz-raw://5a70c9a48e373004db224afe4dea22c993914ba3dd2da3f3c92d6278cccbd6c0",
          "dweb:/ipfs/QmaGMr7xmiTn31RjgTZgYriSCTxXdXVVDK1ZHf26JjzBMB"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/SlotsBitmapLibrary.sol": {
        "keccak256": "0xec699ed1ce16cd82d6031dafae26b72a23f8830fe81ff46313355d8227224de4",
        "urls": [
          "bzz-raw://499f55d7ca02f6707717464ad26a39e36f32ce8e9033e882aed26e0d08f19930",
          "dweb:/ipfs/QmeGmRg3PFbVB2XSiPSddiUHHa1BPm6Udp8aQSZrF1ZF2k"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/FullUpgradableSuperTokenProxy.sol": {
        "keccak256": "0x3c8dc965e5ff9a3b20031f8f342927a1a892d9a0317162faa326b274ea86693a",
        "urls": [
          "bzz-raw://455ca72791cdfdff8f10b85b442ab472ef625e9b75698bd69880ff8d4aabae35",
          "dweb:/ipfs/QmUmcFLgzbTthqewiZbVgUKPudDT4sxdcLjWjrosrgnUXW"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperToken.sol": {
        "keccak256": "0x322b255f3831b3cf6078199e32c428e31356843813fd8e84eb8c861162303906",
        "urls": [
          "bzz-raw://ef819d17144ff3d33050f4d89f0bf71dba64cb67250c38472c5fced71d317258",
          "dweb:/ipfs/Qmac1jzPRmeqeSAGikV5T6yZFSfsBgtgr6m14NtFsvRWVj"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperTokenFactory.sol": {
        "keccak256": "0xb5a43bd628f7c3be1804b69be5e6d1b8a7aab07fa07a00d6481a65fc67d807c2",
        "urls": [
          "bzz-raw://557a4d49b83d101ec942699a63d6061690d6192bbc118ec1fe6a1265ffb16b51",
          "dweb:/ipfs/QmQNsYzexFPvF2ZFDuxoAscokPFc236onrLkGPdZP3tk6Q"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/Superfluid.sol": {
        "keccak256": "0xdc2cf2908004059b6b148643e5110a9f1636d6b9cc221d7c20cb00d0b3aefdcf",
        "urls": [
          "bzz-raw://386a1c038f3f622bcf8056a6410ff3c70f61fd0ea0b045d6926ca72d96d7366a",
          "dweb:/ipfs/QmZNgpDhnKEn5gPs9TWPuiD2mr599FgAJMD6xfL8huM66i"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol": {
        "keccak256": "0x8d09c18f0b1315189bcc91c797760792ec9a56ef9c1788f73ffbea2f2b006c2e",
        "urls": [
          "bzz-raw://c3b15fbe1e7b18afb1ab49e4c4f35b9231f4563fb6ba122d93ec488eee092e73",
          "dweb:/ipfs/QmYVicfTymcAm5vsFwEnC9raHYRssqjV7A2qyTp4aJWdHH"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/tokens/PureSuperToken.sol": {
        "keccak256": "0x511c6ba485f4fcd8f5969e85256c2fddebf9d1757c3bccaebb5338e7beb12cb7",
        "urls": [
          "bzz-raw://a43eca8cf3f5d1a375ec67417950a376152fc7cd30aed5da998e465d241b62cf",
          "dweb:/ipfs/QmZXYr2PyWt1Bqzy7EK7DB429563vEMNChXYcAWPyZhX3d"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/tokens/SETH.sol": {
        "keccak256": "0xcf8929539936e29c3fbe5ab9a71a6c6c24b430b44127e666db8b535af2427a82",
        "urls": [
          "bzz-raw://66647881b983406157513f4576766c12799f1e8a7d84a1ae32482ed8318948c6",
          "dweb:/ipfs/QmPCEP7wPV9pdELrECGGpdDCzXVdYzvc1dEFvx88cJYQ5W"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol": {
        "keccak256": "0x368ba82f761822466ebc49782b99c9eaa2664e7d4582fde1cb38098ee9926f71",
        "urls": [
          "bzz-raw://02984681098e314734e18fc14ffcdbf9cf2bd079fb5735af75c44b5641f0dcf5",
          "dweb:/ipfs/QmedH2QB6VkyJ8Kw1tQC2E8VDF3u23U2eT5tP6VGY1KwBP"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxy.sol": {
        "keccak256": "0x0c19ed3efb257bd01be01246c01be124d803fa294a443ff3c0d0e99c0f16d661",
        "urls": [
          "bzz-raw://d683daeca511b25bc107ac14fa3b95df11537f073a93bee5947adcdd99d4cace",
          "dweb:/ipfs/QmQUzftmLtpMPZsVa2DYVbZW9BqPPDUr6vBH7xmjwJQf5C"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol": {
        "keccak256": "0x6dd522f9867e769a945cea48a15d63488cdbd19091ed38adc95b43a70129b349",
        "urls": [
          "bzz-raw://ed451eb0ed865b2d2338269134236d59ceafe4685d4b5df68843924620f6b715",
          "dweb:/ipfs/QmVr7hh9mnmfFzoJd4oXmuSfkXL2a4gdAKoRYXMfe3BFaE"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/utils/CFAv1Forwarder.sol": {
        "keccak256": "0x616206de4f183b73b08742e93473c8c3c6b0446197728bcbb01c84cc8d01d951",
        "urls": [
          "bzz-raw://7eabc658eed43e05ffc7851d07182a86900921448dc01f86d92676d34f50df13",
          "dweb:/ipfs/QmRWtcJAvdkBQfPSroYccCSHBN5yQnNdsMmTnQqdqawpJs"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/utils/Resolver.sol": {
        "keccak256": "0xd7527d36f85691078932f6a3f96c7323970498a9dedc47c0afce2d6391dbbae1",
        "urls": [
          "bzz-raw://7d0929208143ed2a6222436c3521e987114f0402e7e1eb7f6c498ae6fde640e8",
          "dweb:/ipfs/QmbeANPGN8ufWNEHzBxUTSAsfGx6NXAvhCVR4WNVso81Jy"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/utils/SuperfluidFrameworkDeployer.sol": {
        "keccak256": "0x0fbd4e754e5caab089f6b3f6dc639ce90c2ccf1e1415eb20e12a1611a992e1cd",
        "urls": [
          "bzz-raw://78a17317eb81f2df4f4f99eaf06af4db29a0195f5a2a2cca94419e5f8009b66f",
          "dweb:/ipfs/QmPzTicUYZGak6BLYwNFVKyJMV6q1f2iYiT9uTP5FcTRi4"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/utils/SuperfluidLoader.sol": {
        "keccak256": "0x166f5ec215a1ca46102fe1339a33778c44e74dc63afcef5270c77e6700e4f924",
        "urls": [
          "bzz-raw://266bcd75f95916f472d9b9ac98d6128a24544bce871f90edc8e998dd676e06bc",
          "dweb:/ipfs/QmP7MKLRTUy75bspei6r8YmKdaaesRghn9ehrd2Pt24Udj"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/utils/TestGovernance.sol": {
        "keccak256": "0xce9231c87c4b4baeb1b98a92668d085d3a396e866d1f693a6c8b250638949e1b",
        "urls": [
          "bzz-raw://db7e44eea0379748fa75dbe9238bc4f256b2752a1fd598be5033f75b2d5d916f",
          "dweb:/ipfs/QmVdvJPte6c9KqZaiVMi8HLqwMXXUqDMEJAtYNDUPxURQo"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/utils/TestResolver.sol": {
        "keccak256": "0x84ab812b2de23a611866bcd2d16a90658b71919ec005033530e85832513124d6",
        "urls": [
          "bzz-raw://4ee0bbb1e70ea3cea1bfd5e31f8417645e6091d4559663b4f9c3bfc663a80c7d",
          "dweb:/ipfs/QmSjmuWt1CHp4j1kWm5Kbx7JTrEZMdjgcAWQCkYa2c6McU"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/utils/TestToken.sol": {
        "keccak256": "0x41cd8061b059c317fe1581e1cffb00670e5b69929c1a27d4a2002b135b5f3ade",
        "urls": [
          "bzz-raw://d3d2f66f2b93c7da356d2136d6e6c4b80630c35c272b2280d2b332abb2f5a601",
          "dweb:/ipfs/QmYDJu3zMMpyXDHjLPoqJggQFbzemiqkRwfLwfDQaBRQCL"
        ],
        "license": "AGPLv3"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Tap.sol": {
        "keccak256": "0x548135b9c86bc0553b3d5c65cca4caddb7cb02281619c2fda8a25e4a171869c0",
        "urls": [
          "bzz-raw://ac2c092e2762eb8641e98d9ccc1da22ad75c77400f4a1613932aaf9ba9923cd9",
          "dweb:/ipfs/QmWNi8nYm4dr5rFi9pBWbjDRQEbyyMDeBSTFsynDFeSyDc"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "src/TapWizard.sol": {
        "keccak256": "0xc31fa144f059d8bd4ba2a8c0b364204ff7247ef97dc9c7f0c479ab4cf77c91b6",
        "urls": [
          "bzz-raw://6dc29fe8ad3ff1aaccbe6cb089a0c5eaa560781670f4a497f1b3c87ab27608aa",
          "dweb:/ipfs/QmZkd7BAKzy6c6xFbcajs9ozR2vhToBqZjHciYSj4UsY4z"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "src/interfaces/IERC20Mod.sol": {
        "keccak256": "0x37d8289a288d75dffb8d0472c3acfb4bd9b9866a8a8df2ca1b2a33e69f3d0861",
        "urls": [
          "bzz-raw://9818c52f971ca861ebeaf7e0d0afe5313e49a65d06db1ca8838d34de48bf9334",
          "dweb:/ipfs/QmTi1ANkMySdaUxtdJoDe2DBDnN1SZxLksbsttYL3o11iD"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "src/interfaces/ITap.sol": {
        "keccak256": "0x5a16d09b1d21f86357aa9031df30d46e306f864b95d6af6d198cbd031f631c6d",
        "urls": [
          "bzz-raw://335da12e842e0539f2f19c2fff8780e90a4ab724805a3a3f91f8f28dc01e6964",
          "dweb:/ipfs/QmP2ZdA1Eiw8YBNENV1BgkZAmmuWMWs8jrpR9G73xE2z48"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "src/interfaces/ITapWizard.sol": {
        "keccak256": "0x47245acc75a4eac8a4deff88851e7a1859e903e829037423492bddac0aa56e2c",
        "urls": [
          "bzz-raw://f9c6d456a451dab35f9eff21919a2d5e2bd3311b954e87f4e43e4bb1bacb3e44",
          "dweb:/ipfs/QmWg6REYFwGxKjqUQ8nnGsV1XnPjKUZJzP69viH7GBKd3t"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "src/interfaces/IcfaV1Forwarder.sol": {
        "keccak256": "0x93e1acfd961d30da03d31d5cf0e6621f23f6d0f618c669a4dc9aa9d9f2778dd4",
        "urls": [
          "bzz-raw://a92361a2eb3fa033f2a6193c9b68dcd07db9e0130a52c640db9b1b8cc8d409eb",
          "dweb:/ipfs/QmQDZS4t5tPrDXHznSG1PtuBp38vVFDM9W9cc4BSNr4N7i"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "test/Setup.sol": {
        "keccak256": "0x1843a27cb8e871e1671c285d37b7c98eb055980d751f8e5ae658a248b9fd3f38",
        "urls": [
          "bzz-raw://44302b9b37fef1c749a245f4f52a11a051bf513a4356e9f45c25b41e957c0f80",
          "dweb:/ipfs/QmUBgGSiNgUVvxTjpLQB2DbRQ3DWrNBJycy2K6tLUe1wqG"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "test/helpers/FoundrySuperfluidTester.sol": {
        "keccak256": "0xe0bcbb8a71849bf723be911f04d23e9215a76e0d51b213c0ee1840d7c806acfc",
        "urls": [
          "bzz-raw://b6afde77b19df16e169d3fd03743e6e03c9f55cd5fcaa136e9c7981ee732be21",
          "dweb:/ipfs/QmdXfn47K5UR2EWpq2yz3JpbT2s8b67uT7nLEBGN17zq4d"
        ],
        "license": "AGPLv3"
      },
      "test/mocks/MockNFT.sol": {
        "keccak256": "0xb4d1448db88b874c3dd175a763477cdf3c471b0634bc30ce3391b31f3851fe29",
        "urls": [
          "bzz-raw://81f52971324528ac0519d949624cff3483eacc0e924a03dacedca5ee7bc4bbd4",
          "dweb:/ipfs/QmeuR6ssKZgoU6hzAXV7qXriNeVo67fTwzhSQ1AefFLd1r"
        ],
        "license": "SEE LICENSE IN LICENSE"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Setup.sol",
    "id": 58130,
    "exportedSymbols": {
      "CFAv1Forwarder": [
        54068
      ],
      "CFAv1Library": [
        40042
      ],
      "Clones": [
        25145
      ],
      "CommonBase": [
        1818
      ],
      "ConstantFlowAgreementV1": [
        35402
      ],
      "DSTest": [
        1786
      ],
      "ERC1820RegistryCompiled": [
        46105
      ],
      "ERC20": [
        55438
      ],
      "FoundrySuperfluidTester": [
        61648
      ],
      "IDAv1Library": [
        41397
      ],
      "IERC20Mod": [
        57485
      ],
      "IERC721": [
        26489
      ],
      "ISuperApp": [
        44393
      ],
      "ISuperToken": [
        44781
      ],
      "ISuperfluid": [
        45383
      ],
      "ITap": [
        57730
      ],
      "ITapWizard": [
        57812
      ],
      "IcfaV1Forwarder": [
        57953
      ],
      "Initializable": [
        25366
      ],
      "InstantDistributionAgreementV1": [
        38862
      ],
      "MockNFT": [
        61703
      ],
      "Ownable": [
        25065
      ],
      "SafeCast": [
        29832
      ],
      "SafeERC20": [
        26373
      ],
      "Setup": [
        58129
      ],
      "StdAssertions": [
        2644
      ],
      "StdCheats": [
        5040
      ],
      "StdStorage": [
        5639
      ],
      "StdUtils": [
        7468
      ],
      "SuperAppBase": [
        41545
      ],
      "SuperAppDefinitions": [
        43816
      ],
      "SuperToken": [
        48568
      ],
      "Superfluid": [
        51949
      ],
      "SuperfluidFrameworkDeployer": [
        54731
      ],
      "Tap": [
        57210
      ],
      "TapWizard": [
        57473
      ],
      "Test": [
        7499
      ],
      "TestBase": [
        7488
      ],
      "TestToken": [
        55050
      ],
      "Vm": [
        8284
      ],
      "console": [
        16348
      ],
      "console2": [
        24413
      ],
      "stdError": [
        5106
      ],
      "stdJson": [
        5466
      ],
      "stdMath": [
        5608
      ],
      "stdStorage": [
        7073
      ]
    },
    "nodeType": "SourceUnit",
    "src": "51:2107:100",
    "nodes": [
      {
        "id": 57955,
        "nodeType": "PragmaDirective",
        "src": "51:24:100",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 57957,
        "nodeType": "ImportDirective",
        "src": "77:112:100",
        "nodes": [],
        "absolutePath": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/utils/CFAv1Forwarder.sol",
        "file": "protocol-monorepo/packages/ethereum-contracts/contracts/utils/CFAv1Forwarder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58130,
        "sourceUnit": 54069,
        "symbolAliases": [
          {
            "foreign": {
              "id": 57956,
              "name": "CFAv1Forwarder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54068,
              "src": "85:14:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 57959,
        "nodeType": "ImportDirective",
        "src": "190:72:100",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "file": "openzeppelin-contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58130,
        "sourceUnit": 26490,
        "symbolAliases": [
          {
            "foreign": {
              "id": 57958,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26489,
              "src": "198:7:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 57960,
        "nodeType": "ImportDirective",
        "src": "263:31:100",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58130,
        "sourceUnit": 16349,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 57961,
        "nodeType": "ImportDirective",
        "src": "295:34:100",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58130,
        "sourceUnit": 55439,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 57963,
        "nodeType": "ImportDirective",
        "src": "330:44:100",
        "nodes": [],
        "absolutePath": "test/mocks/MockNFT.sol",
        "file": "./mocks/MockNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58130,
        "sourceUnit": 61704,
        "symbolAliases": [
          {
            "foreign": {
              "id": 57962,
              "name": "MockNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61703,
              "src": "338:7:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 57964,
        "nodeType": "ImportDirective",
        "src": "375:47:100",
        "nodes": [],
        "absolutePath": "test/helpers/FoundrySuperfluidTester.sol",
        "file": "./helpers/FoundrySuperfluidTester.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58130,
        "sourceUnit": 61649,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 57965,
        "nodeType": "ImportDirective",
        "src": "423:24:100",
        "nodes": [],
        "absolutePath": "src/Tap.sol",
        "file": "../src/Tap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58130,
        "sourceUnit": 57211,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 57966,
        "nodeType": "ImportDirective",
        "src": "448:30:100",
        "nodes": [],
        "absolutePath": "src/TapWizard.sol",
        "file": "../src/TapWizard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58130,
        "sourceUnit": 57474,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58129,
        "nodeType": "ContractDefinition",
        "src": "480:1677:100",
        "nodes": [
          {
            "id": 57972,
            "nodeType": "UsingForDirective",
            "src": "537:45:100",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 57969,
              "name": "CFAv1Library",
              "nameLocations": [
                "543:12:100"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40042,
              "src": "543:12:100"
            },
            "typeName": {
              "id": 57971,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 57970,
                "name": "CFAv1Library.InitData",
                "nameLocations": [
                  "560:12:100",
                  "573:8:100"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 38877,
                "src": "560:21:100"
              },
              "referencedDeclaration": 38877,
              "src": "560:21:100",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_InitData_$38877_storage_ptr",
                "typeString": "struct CFAv1Library.InitData"
              }
            }
          },
          {
            "id": 57984,
            "nodeType": "EventDefinition",
            "src": "588:163:100",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "23c83c253cc492eb3c8c7195f38adcc093e4e9cc14d6c521f2c83377e50cba01",
            "name": "TapCreated",
            "nameLocation": "594:10:100",
            "parameters": {
              "id": 57983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57974,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "621:4:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 57984,
                  "src": "614:11:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 57973,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:6:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57976,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "643:7:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 57984,
                  "src": "635:15:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:7:100",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57978,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tap",
                  "nameLocation": "676:3:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 57984,
                  "src": "660:19:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:7:100",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57980,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "705:3:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 57984,
                  "src": "689:19:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:100",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57982,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "superToken",
                  "nameLocation": "734:10:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 57984,
                  "src": "718:26:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:100",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "604:146:100"
            }
          },
          {
            "id": 57987,
            "nodeType": "VariableDeclaration",
            "src": "757:19:100",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tapWizard",
            "nameLocation": "767:9:100",
            "scope": 58129,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TapWizard_$57473",
              "typeString": "contract TapWizard"
            },
            "typeName": {
              "id": 57986,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 57985,
                "name": "TapWizard",
                "nameLocations": [
                  "757:9:100"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 57473,
                "src": "757:9:100"
              },
              "referencedDeclaration": 57473,
              "src": "757:9:100",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TapWizard_$57473",
                "typeString": "contract TapWizard"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 57990,
            "nodeType": "VariableDeclaration",
            "src": "782:21:100",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tapImplementation",
            "nameLocation": "786:17:100",
            "scope": 58129,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Tap_$57210",
              "typeString": "contract Tap"
            },
            "typeName": {
              "id": 57989,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 57988,
                "name": "Tap",
                "nameLocations": [
                  "782:3:100"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 57210,
                "src": "782:3:100"
              },
              "referencedDeclaration": 57210,
              "src": "782:3:100",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Tap_$57210",
                "typeString": "contract Tap"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 57993,
            "nodeType": "VariableDeclaration",
            "src": "809:11:100",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "nft",
            "nameLocation": "817:3:100",
            "scope": 58129,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockNFT_$61703",
              "typeString": "contract MockNFT"
            },
            "typeName": {
              "id": 57992,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 57991,
                "name": "MockNFT",
                "nameLocations": [
                  "809:7:100"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 61703,
                "src": "809:7:100"
              },
              "referencedDeclaration": 61703,
              "src": "809:7:100",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockNFT_$61703",
                "typeString": "contract MockNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 57996,
            "nodeType": "VariableDeclaration",
            "src": "827:70:100",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "deployer",
            "nameLocation": "844:8:100",
            "scope": 58129,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 57994,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "827:7:100",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862346337396461423866323539433741656536453562324161373239383231383634323237653834",
              "id": 57995,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "855:42:100",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb4c79daB8f259C7Aee6E5b2Aa729821864227e84"
            },
            "visibility": "internal"
          },
          {
            "id": 58003,
            "nodeType": "FunctionDefinition",
            "src": "904:43:100",
            "nodes": [],
            "body": {
              "id": 58002,
              "nodeType": "Block",
              "src": "945:2:100",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "33",
                    "id": 57999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "942:1:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  }
                ],
                "id": 58000,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 57998,
                  "name": "FoundrySuperfluidTester",
                  "nameLocations": [
                    "918:23:100"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 61648,
                  "src": "918:23:100"
                },
                "nodeType": "ModifierInvocation",
                "src": "918:26:100"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 57997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "915:2:100"
            },
            "returnParameters": {
              "id": 58001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "945:0:100"
            },
            "scope": 58129,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 58053,
            "nodeType": "FunctionDefinition",
            "src": "953:593:100",
            "nodes": [],
            "body": {
              "id": 58052,
              "nodeType": "Block",
              "src": "986:560:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 58012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58007,
                      "name": "tapImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57990,
                      "src": "1047:17:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tap_$57210",
                        "typeString": "contract Tap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 58010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1067:7:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Tap_$57210_$",
                          "typeString": "function () returns (contract Tap)"
                        },
                        "typeName": {
                          "id": 58009,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 58008,
                            "name": "Tap",
                            "nameLocations": [
                              "1071:3:100"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 57210,
                            "src": "1071:3:100"
                          },
                          "referencedDeclaration": 57210,
                          "src": "1071:3:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Tap_$57210",
                            "typeString": "contract Tap"
                          }
                        }
                      },
                      "id": 58011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1067:9:100",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tap_$57210",
                        "typeString": "contract Tap"
                      }
                    },
                    "src": "1047:29:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tap_$57210",
                      "typeString": "contract Tap"
                    }
                  },
                  "id": 58013,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:29:100"
                },
                {
                  "expression": {
                    "id": 58032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58014,
                      "name": "tapWizard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57987,
                      "src": "1117:9:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TapWizard_$57473",
                        "typeString": "contract TapWizard"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 58021,
                                    "name": "sf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61285,
                                    "src": "1180:2:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Framework_$54219_storage",
                                      "typeString": "struct SuperfluidFrameworkDeployer.Framework storage ref"
                                    }
                                  },
                                  "id": 58022,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1183:14:100",
                                  "memberName": "cfaV1Forwarder",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54218,
                                  "src": "1180:17:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CFAv1Forwarder_$54068",
                                    "typeString": "contract CFAv1Forwarder"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CFAv1Forwarder_$54068",
                                    "typeString": "contract CFAv1Forwarder"
                                  }
                                ],
                                "id": 58020,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1172:7:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 58019,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1172:7:100",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 58023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1172:26:100",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 58018,
                            "name": "IcfaV1Forwarder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57953,
                            "src": "1156:15:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IcfaV1Forwarder_$57953_$",
                              "typeString": "type(contract IcfaV1Forwarder)"
                            }
                          },
                          "id": 58024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1156:43:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IcfaV1Forwarder_$57953",
                            "typeString": "contract IcfaV1Forwarder"
                          }
                        },
                        {
                          "expression": {
                            "id": 58025,
                            "name": "sf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61285,
                            "src": "1213:2:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Framework_$54219_storage",
                              "typeString": "struct SuperfluidFrameworkDeployer.Framework storage ref"
                            }
                          },
                          "id": 58026,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1216:4:100",
                          "memberName": "host",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54194,
                          "src": "1213:7:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Superfluid_$51949",
                            "typeString": "contract Superfluid"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 58029,
                              "name": "tapImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57990,
                              "src": "1242:17:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Tap_$57210",
                                "typeString": "contract Tap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Tap_$57210",
                                "typeString": "contract Tap"
                              }
                            ],
                            "id": 58028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1234:7:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 58027,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1234:7:100",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 58030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1234:26:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IcfaV1Forwarder_$57953",
                            "typeString": "contract IcfaV1Forwarder"
                          },
                          {
                            "typeIdentifier": "t_contract$_Superfluid_$51949",
                            "typeString": "contract Superfluid"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 58017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1129:13:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IcfaV1Forwarder_$57953_$_t_contract$_ISuperfluid_$45383_$_t_address_$returns$_t_contract$_TapWizard_$57473_$",
                          "typeString": "function (contract IcfaV1Forwarder,contract ISuperfluid,address) returns (contract TapWizard)"
                        },
                        "typeName": {
                          "id": 58016,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 58015,
                            "name": "TapWizard",
                            "nameLocations": [
                              "1133:9:100"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 57473,
                            "src": "1133:9:100"
                          },
                          "referencedDeclaration": 57473,
                          "src": "1133:9:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TapWizard_$57473",
                            "typeString": "contract TapWizard"
                          }
                        }
                      },
                      "id": 58031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1129:141:100",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TapWizard_$57473",
                        "typeString": "contract TapWizard"
                      }
                    },
                    "src": "1117:153:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TapWizard_$57473",
                      "typeString": "contract TapWizard"
                    }
                  },
                  "id": 58033,
                  "nodeType": "ExpressionStatement",
                  "src": "1117:153:100"
                },
                {
                  "expression": {
                    "id": 58041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58034,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57993,
                      "src": "1281:3:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockNFT_$61703",
                        "typeString": "contract MockNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "54657374",
                          "id": 58038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1299:6:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                            "typeString": "literal_string \"Test\""
                          },
                          "value": "Test"
                        },
                        {
                          "hexValue": "4d4e4654",
                          "id": 58039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1307:6:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_38f99777330a23b7254d6d34302160815d5489450b05e18c9e8ef3b4d4ed66f5",
                            "typeString": "literal_string \"MNFT\""
                          },
                          "value": "MNFT"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
                            "typeString": "literal_string \"Test\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_38f99777330a23b7254d6d34302160815d5489450b05e18c9e8ef3b4d4ed66f5",
                            "typeString": "literal_string \"MNFT\""
                          }
                        ],
                        "id": 58037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1287:11:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_MockNFT_$61703_$",
                          "typeString": "function (string memory,string memory) returns (contract MockNFT)"
                        },
                        "typeName": {
                          "id": 58036,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 58035,
                            "name": "MockNFT",
                            "nameLocations": [
                              "1291:7:100"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 61703,
                            "src": "1291:7:100"
                          },
                          "referencedDeclaration": 61703,
                          "src": "1291:7:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockNFT_$61703",
                            "typeString": "contract MockNFT"
                          }
                        }
                      },
                      "id": 58040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1287:27:100",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockNFT_$61703",
                        "typeString": "contract MockNFT"
                      }
                    },
                    "src": "1281:33:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockNFT_$61703",
                      "typeString": "contract MockNFT"
                    }
                  },
                  "id": 58042,
                  "nodeType": "ExpressionStatement",
                  "src": "1281:33:100"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 58043,
                        "name": "FoundrySuperfluidTester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61648,
                        "src": "1402:23:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FoundrySuperfluidTester_$61648_$",
                          "typeString": "type(contract FoundrySuperfluidTester)"
                        }
                      },
                      "id": 58045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1426:5:100",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61418,
                      "src": "1402:29:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 58046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1402:31:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58047,
                  "nodeType": "ExpressionStatement",
                  "src": "1402:31:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58049,
                        "name": "deployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57996,
                        "src": "1530:8:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 58048,
                      "name": "fillWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61432,
                      "src": "1519:10:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 58050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1519:20:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58051,
                  "nodeType": "ExpressionStatement",
                  "src": "1519:20:100"
                }
              ]
            },
            "baseFunctions": [
              61418
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "962:5:100",
            "overrides": {
              "id": 58005,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "977:8:100"
            },
            "parameters": {
              "id": 58004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "967:2:100"
            },
            "returnParameters": {
              "id": 58006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "986:0:100"
            },
            "scope": 58129,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 58111,
            "nodeType": "FunctionDefinition",
            "src": "1556:433:100",
            "nodes": [],
            "body": {
              "id": 58110,
              "nodeType": "Block",
              "src": "1606:383:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58062,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61209,
                        "src": "1630:5:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 58059,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1616:2:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8284",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 58061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1619:10:100",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8012,
                      "src": "1616:13:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 58063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1616:20:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58064,
                  "nodeType": "ExpressionStatement",
                  "src": "1616:20:100"
                },
                {
                  "expression": {
                    "id": 58082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58065,
                      "name": "_tap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58057,
                      "src": "1646:4:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tap_$57210",
                        "typeString": "contract Tap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "54455354",
                              "id": 58069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1707:6:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                                "typeString": "literal_string \"TEST\""
                              },
                              "value": "TEST"
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "31653130",
                                  "id": 58071,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1746:4:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10000000000_by_1",
                                    "typeString": "int_const 10000000000"
                                  },
                                  "value": "1e10"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_10000000000_by_1",
                                    "typeString": "int_const 10000000000"
                                  }
                                ],
                                "id": 58070,
                                "name": "_convertToRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58128,
                                "src": "1731:14:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint96_$",
                                  "typeString": "function (uint256) pure returns (uint96)"
                                }
                              },
                              "id": 58072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1731:20:100",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 58076,
                                      "name": "nft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 57993,
                                      "src": "1785:3:100",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MockNFT_$61703",
                                        "typeString": "contract MockNFT"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MockNFT_$61703",
                                        "typeString": "contract MockNFT"
                                      }
                                    ],
                                    "id": 58075,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1777:7:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 58074,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1777:7:100",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 58077,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1777:12:100",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 58073,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26489,
                                "src": "1769:7:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$26489_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 58078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1769:21:100",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$26489",
                                "typeString": "contract IERC721"
                              }
                            },
                            {
                              "id": 58079,
                              "name": "superToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61291,
                              "src": "1808:10:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperToken_$48568",
                                "typeString": "contract SuperToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                                "typeString": "literal_string \"TEST\""
                              },
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC721_$26489",
                                "typeString": "contract IERC721"
                              },
                              {
                                "typeIdentifier": "t_contract$_SuperToken_$48568",
                                "typeString": "contract SuperToken"
                              }
                            ],
                            "expression": {
                              "id": 58067,
                              "name": "tapWizard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57987,
                              "src": "1670:9:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TapWizard_$57473",
                                "typeString": "contract TapWizard"
                              }
                            },
                            "id": 58068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1680:9:100",
                            "memberName": "createTap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57472,
                            "src": "1670:19:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint96_$_t_contract$_IERC721_$26489_$_t_contract$_ISuperToken_$44781_$returns$_t_address_$",
                              "typeString": "function (string memory,uint96,contract IERC721,contract ISuperToken) external returns (address)"
                            }
                          },
                          "id": 58080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1670:162:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 58066,
                        "name": "Tap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57210,
                        "src": "1653:3:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Tap_$57210_$",
                          "typeString": "type(contract Tap)"
                        }
                      },
                      "id": 58081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1653:189:100",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tap_$57210",
                        "typeString": "contract Tap"
                      }
                    },
                    "src": "1646:196:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tap_$57210",
                      "typeString": "contract Tap"
                    }
                  },
                  "id": 58083,
                  "nodeType": "ExpressionStatement",
                  "src": "1646:196:100"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 58084,
                        "name": "_tap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58057,
                        "src": "1852:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tap_$57210",
                          "typeString": "contract Tap"
                        }
                      },
                      "id": 58086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1857:11:100",
                      "memberName": "activateTap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56910,
                      "src": "1852:16:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 58087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1852:18:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58088,
                  "nodeType": "ExpressionStatement",
                  "src": "1852:18:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 58094,
                            "name": "_tap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58057,
                            "src": "1917:4:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Tap_$57210",
                              "typeString": "contract Tap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Tap_$57210",
                              "typeString": "contract Tap"
                            }
                          ],
                          "id": 58093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1909:7:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58092,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1909:7:100",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1909:13:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653132",
                        "id": 58096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1924:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        },
                        "value": "1e12"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        }
                      ],
                      "expression": {
                        "id": 58089,
                        "name": "superToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61291,
                        "src": "1880:10:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperToken_$48568",
                          "typeString": "contract SuperToken"
                        }
                      },
                      "id": 58091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1891:17:100",
                      "memberName": "increaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47782,
                      "src": "1880:28:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 58097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1880:49:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 58098,
                  "nodeType": "ExpressionStatement",
                  "src": "1880:49:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31653132",
                        "id": 58102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1953:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        },
                        "value": "1e12"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        }
                      ],
                      "expression": {
                        "id": 58099,
                        "name": "_tap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58057,
                        "src": "1939:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tap_$57210",
                          "typeString": "contract Tap"
                        }
                      },
                      "id": 58101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1944:8:100",
                      "memberName": "topUpTap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56468,
                      "src": "1939:13:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 58103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1939:19:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58104,
                  "nodeType": "ExpressionStatement",
                  "src": "1939:19:100"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 58105,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1968:2:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8284",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 58107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1971:9:100",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8029,
                      "src": "1968:12:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 58108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1968:14:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58109,
                  "nodeType": "ExpressionStatement",
                  "src": "1968:14:100"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTap",
            "nameLocation": "1565:10:100",
            "parameters": {
              "id": 58054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1575:2:100"
            },
            "returnParameters": {
              "id": 58058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58057,
                  "mutability": "mutable",
                  "name": "_tap",
                  "nameLocation": "1600:4:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 58111,
                  "src": "1596:8:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Tap_$57210",
                    "typeString": "contract Tap"
                  },
                  "typeName": {
                    "id": 58056,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 58055,
                      "name": "Tap",
                      "nameLocations": [
                        "1596:3:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 57210,
                      "src": "1596:3:100"
                    },
                    "referencedDeclaration": 57210,
                    "src": "1596:3:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tap_$57210",
                      "typeString": "contract Tap"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1595:10:100"
            },
            "scope": 58129,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 58128,
            "nodeType": "FunctionDefinition",
            "src": "1995:160:100",
            "nodes": [],
            "body": {
              "id": 58127,
              "nodeType": "Block",
              "src": "2103:52:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 58125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58118,
                      "name": "_flowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58116,
                      "src": "2113:9:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 58123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 58121,
                            "name": "_rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58113,
                            "src": "2132:5:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32353932303030",
                            "id": 58122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2140:7:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2592000_by_1",
                              "typeString": "int_const 2592000"
                            },
                            "value": "2592000"
                          },
                          "src": "2132:15:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 58120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2125:6:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint96_$",
                          "typeString": "type(uint96)"
                        },
                        "typeName": {
                          "id": 58119,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "2125:6:100",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 58124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2125:23:100",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "2113:35:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 58126,
                  "nodeType": "ExpressionStatement",
                  "src": "2113:35:100"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_convertToRate",
            "nameLocation": "2004:14:100",
            "parameters": {
              "id": 58114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58113,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nameLocation": "2027:5:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 58128,
                  "src": "2019:13:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:7:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2018:15:100"
            },
            "returnParameters": {
              "id": 58117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58116,
                  "mutability": "mutable",
                  "name": "_flowRate",
                  "nameLocation": "2088:9:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 58128,
                  "src": "2081:16:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 58115,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2081:6:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2080:18:100"
            },
            "scope": 58129,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 57967,
              "name": "FoundrySuperfluidTester",
              "nameLocations": [
                "507:23:100"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61648,
              "src": "507:23:100"
            },
            "id": 57968,
            "nodeType": "InheritanceSpecifier",
            "src": "507:23:100"
          }
        ],
        "canonicalName": "Setup",
        "contractDependencies": [
          54731,
          57210,
          57473,
          61703
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          58129,
          61648,
          7499,
          7468,
          5040,
          4651,
          2644,
          1786,
          7488,
          1818
        ],
        "name": "Setup",
        "nameLocation": "498:5:100",
        "scope": 58130,
        "usedErrors": []
      }
    ],
    "license": "SEE LICENSE IN LICENSE"
  },
  "id": 100
}