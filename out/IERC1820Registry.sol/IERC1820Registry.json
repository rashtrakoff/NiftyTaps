{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "InterfaceImplementerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "ManagerChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_interfaceHash",
          "type": "bytes32"
        }
      ],
      "name": "getInterfaceImplementer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "implementsERC165Interface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "implementsERC165InterfaceNoCache",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "interfaceName",
          "type": "string"
        }
      ],
      "name": "interfaceHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "setInterfaceImplementer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "setManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "updateERC165Cache",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getInterfaceImplementer(address,bytes32)": "aabbb8ca",
    "getManager(address)": "3d584063",
    "implementsERC165Interface(address,bytes4)": "f712f3e8",
    "implementsERC165InterfaceNoCache(address,bytes4)": "b7056765",
    "interfaceHash(string)": "65ba36c1",
    "setInterfaceImplementer(address,bytes32,address)": "29965a1d",
    "setManager(address,address)": "5df8122f",
    "updateERC165Cache(address,bytes4)": "a41e7d51"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceImplementerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"}],\"name\":\"getInterfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165Interface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165InterfaceNoCache\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"interfaceName\",\"type\":\"string\"}],\"name\":\"interfaceHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterfaceImplementer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"updateERC165Cache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.\",\"kind\":\"dev\",\"methods\":{\"getInterfaceImplementer(address,bytes32)\":{\"details\":\"Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address.\"},\"getManager(address)\":{\"details\":\"Returns the manager for `account`. See {setManager}.\"},\"implementsERC165Interface(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"interfaceHash(string)\":{\"details\":\"Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\"},\"setInterfaceImplementer(address,bytes32,address)\":{\"details\":\"Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}.\"},\"setManager(address,address)\":{\"details\":\"Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`.\"},\"updateERC165Cache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract for which to update the cache.\",\"interfaceId\":\"ERC165 interface for which to update the cache.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"implementsERC165Interface(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address.\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not without using or updating the cache.\"},\"updateERC165Cache(address,bytes4)\":{\"notice\":\"Updates the cache with whether the contract implements an ERC165 interface or not.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":\"IERC1820Registry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":protocol-monorepo/=lib/protocol-monorepo/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x99c728ced6b04a36a3184c6bb80240a8e2e3c9020e6496a13754580f39610f7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32741874595e1ba36efd140da1d3c2e74a840b95c3df4d79a91587858352a332\",\"dweb:/ipfs/QmWQq3j2QSRCmnnKE4dvbauDSLBtNUqWJiG2hw2UPy93iZ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "interfaceHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "implementer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "InterfaceImplementerSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newManager",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ManagerChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_interfaceHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getInterfaceImplementer",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "implementsERC165Interface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "implementsERC165InterfaceNoCache",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "interfaceName",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "interfaceHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_interfaceHash",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "implementer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setInterfaceImplementer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "newManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setManager"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateERC165Cache"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getInterfaceImplementer(address,bytes32)": {
            "details": "Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address."
          },
          "getManager(address)": {
            "details": "Returns the manager for `account`. See {setManager}."
          },
          "implementsERC165Interface(address,bytes4)": {
            "params": {
              "account": "Address of the contract to check.",
              "interfaceId": "ERC165 interface to check."
            },
            "returns": {
              "_0": "True if `account` implements `interfaceId`, false otherwise."
            }
          },
          "implementsERC165InterfaceNoCache(address,bytes4)": {
            "params": {
              "account": "Address of the contract to check.",
              "interfaceId": "ERC165 interface to check."
            },
            "returns": {
              "_0": "True if `account` implements `interfaceId`, false otherwise."
            }
          },
          "interfaceHash(string)": {
            "details": "Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
          },
          "setInterfaceImplementer(address,bytes32,address)": {
            "details": "Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}."
          },
          "setManager(address,address)": {
            "details": "Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`."
          },
          "updateERC165Cache(address,bytes4)": {
            "params": {
              "account": "Address of the contract for which to update the cache.",
              "interfaceId": "ERC165 interface for which to update the cache."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "implementsERC165Interface(address,bytes4)": {
            "notice": "Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address."
          },
          "implementsERC165InterfaceNoCache(address,bytes4)": {
            "notice": "Checks whether a contract implements an ERC165 interface or not without using or updating the cache."
          },
          "updateERC165Cache(address,bytes4)": {
            "notice": "Updates the cache with whether the contract implements an ERC165 interface or not."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":protocol-monorepo/=lib/protocol-monorepo/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": "IERC1820Registry"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
        "keccak256": "0x99c728ced6b04a36a3184c6bb80240a8e2e3c9020e6496a13754580f39610f7a",
        "urls": [
          "bzz-raw://32741874595e1ba36efd140da1d3c2e74a840b95c3df4d79a91587858352a332",
          "dweb:/ipfs/QmWQq3j2QSRCmnnKE4dvbauDSLBtNUqWJiG2hw2UPy93iZ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol",
    "id": 27231,
    "exportedSymbols": {
      "IERC1820Registry": [
        27230
      ]
    },
    "nodeType": "SourceUnit",
    "src": "124:4743:35",
    "nodes": [
      {
        "id": 27142,
        "nodeType": "PragmaDirective",
        "src": "124:23:35",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 27230,
        "nodeType": "ContractDefinition",
        "src": "769:4097:35",
        "nodes": [
          {
            "id": 27151,
            "nodeType": "EventDefinition",
            "src": "802:115:35",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db153",
            "name": "InterfaceImplementerSet",
            "nameLocation": "808:23:35",
            "parameters": {
              "id": 27150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27145,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "848:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27151,
                  "src": "832:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "832:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27147,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "873:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27151,
                  "src": "857:29:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27146,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27149,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementer",
                  "nameLocation": "904:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27151,
                  "src": "888:27:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "831:85:35"
            }
          },
          {
            "id": 27157,
            "nodeType": "EventDefinition",
            "src": "923:74:35",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a4350",
            "name": "ManagerChanged",
            "nameLocation": "929:14:35",
            "parameters": {
              "id": 27156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27153,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "960:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27157,
                  "src": "944:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27155,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "985:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27157,
                  "src": "969:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "943:53:35"
            }
          },
          {
            "id": 27165,
            "nodeType": "FunctionDefinition",
            "src": "1453:66:35",
            "nodes": [],
            "documentation": {
              "id": 27158,
              "nodeType": "StructuredDocumentation",
              "src": "1003:445:35",
              "text": " @dev Sets `newManager` as the manager for `account`. A manager of an\n account is able to set interface implementers for it.\n By default, each account is its own manager. Passing a value of `0x0` in\n `newManager` will reset the manager to this initial state.\n Emits a {ManagerChanged} event.\n Requirements:\n - the caller must be the current manager for `account`."
            },
            "functionSelector": "5df8122f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setManager",
            "nameLocation": "1462:10:35",
            "parameters": {
              "id": 27163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27160,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1481:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27165,
                  "src": "1473:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27162,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "1498:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27165,
                  "src": "1490:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1472:37:35"
            },
            "returnParameters": {
              "id": 27164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1518:0:35"
            },
            "scope": 27230,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27173,
            "nodeType": "FunctionDefinition",
            "src": "1620:69:35",
            "nodes": [],
            "documentation": {
              "id": 27166,
              "nodeType": "StructuredDocumentation",
              "src": "1525:90:35",
              "text": " @dev Returns the manager for `account`.\n See {setManager}."
            },
            "functionSelector": "3d584063",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getManager",
            "nameLocation": "1629:10:35",
            "parameters": {
              "id": 27169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27168,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1648:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27173,
                  "src": "1640:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1640:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1639:17:35"
            },
            "returnParameters": {
              "id": 27172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27171,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27173,
                  "src": "1680:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1680:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1679:9:35"
            },
            "scope": 27230,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27183,
            "nodeType": "FunctionDefinition",
            "src": "2515:134:35",
            "nodes": [],
            "documentation": {
              "id": 27174,
              "nodeType": "StructuredDocumentation",
              "src": "1695:815:35",
              "text": " @dev Sets the `implementer` contract as ``account``'s implementer for\n `interfaceHash`.\n `account` being the zero address is an alias for the caller's address.\n The zero address can also be used in `implementer` to remove an old one.\n See {interfaceHash} to learn how these are created.\n Emits an {InterfaceImplementerSet} event.\n Requirements:\n - the caller must be the current manager for `account`.\n - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n end in 28 zeroes).\n - `implementer` must implement {IERC1820Implementer} and return true when\n queried for support, unless `implementer` is the caller. See\n {IERC1820Implementer-canImplementInterfaceForAddress}."
            },
            "functionSelector": "29965a1d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setInterfaceImplementer",
            "nameLocation": "2524:23:35",
            "parameters": {
              "id": 27181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27176,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2565:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27183,
                  "src": "2557:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2557:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27178,
                  "mutability": "mutable",
                  "name": "_interfaceHash",
                  "nameLocation": "2590:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27183,
                  "src": "2582:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27177,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2582:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27180,
                  "mutability": "mutable",
                  "name": "implementer",
                  "nameLocation": "2622:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27183,
                  "src": "2614:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2614:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2547:92:35"
            },
            "returnParameters": {
              "id": 27182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2648:0:35"
            },
            "scope": 27230,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27193,
            "nodeType": "FunctionDefinition",
            "src": "3042:106:35",
            "nodes": [],
            "documentation": {
              "id": 27184,
              "nodeType": "StructuredDocumentation",
              "src": "2655:382:35",
              "text": " @dev Returns the implementer of `interfaceHash` for `account`. If no such\n implementer is registered, returns the zero address.\n If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n zeroes), `account` will be queried for support of it.\n `account` being the zero address is an alias for the caller's address."
            },
            "functionSelector": "aabbb8ca",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInterfaceImplementer",
            "nameLocation": "3051:23:35",
            "parameters": {
              "id": 27189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27186,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3083:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27193,
                  "src": "3075:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3075:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27188,
                  "mutability": "mutable",
                  "name": "_interfaceHash",
                  "nameLocation": "3100:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27193,
                  "src": "3092:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27187,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3092:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3074:41:35"
            },
            "returnParameters": {
              "id": 27192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27191,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27193,
                  "src": "3139:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3139:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3138:9:35"
            },
            "scope": 27230,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27201,
            "nodeType": "FunctionDefinition",
            "src": "3355:86:35",
            "nodes": [],
            "documentation": {
              "id": 27194,
              "nodeType": "StructuredDocumentation",
              "src": "3154:196:35",
              "text": " @dev Returns the interface hash for an `interfaceName`, as defined in the\n corresponding\n https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
            },
            "functionSelector": "65ba36c1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "interfaceHash",
            "nameLocation": "3364:13:35",
            "parameters": {
              "id": 27197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27196,
                  "mutability": "mutable",
                  "name": "interfaceName",
                  "nameLocation": "3394:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27201,
                  "src": "3378:29:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27195,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3378:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3377:31:35"
            },
            "returnParameters": {
              "id": 27200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27199,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27201,
                  "src": "3432:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27198,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3432:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3431:9:35"
            },
            "scope": 27230,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27209,
            "nodeType": "FunctionDefinition",
            "src": "3712:73:35",
            "nodes": [],
            "documentation": {
              "id": 27202,
              "nodeType": "StructuredDocumentation",
              "src": "3447:260:35",
              "text": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache."
            },
            "functionSelector": "a41e7d51",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateERC165Cache",
            "nameLocation": "3721:17:35",
            "parameters": {
              "id": 27207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27204,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3747:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27209,
                  "src": "3739:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3739:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27206,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3763:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27209,
                  "src": "3756:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 27205,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3756:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3738:37:35"
            },
            "returnParameters": {
              "id": 27208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3784:0:35"
            },
            "scope": 27230,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27219,
            "nodeType": "FunctionDefinition",
            "src": "4332:101:35",
            "nodes": [],
            "documentation": {
              "id": 27210,
              "nodeType": "StructuredDocumentation",
              "src": "3791:536:35",
              "text": " @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n {updateERC165Cache} with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
            },
            "functionSelector": "f712f3e8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165Interface",
            "nameLocation": "4341:25:35",
            "parameters": {
              "id": 27215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27212,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4375:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27219,
                  "src": "4367:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4367:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27214,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4391:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27219,
                  "src": "4384:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 27213,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4384:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4366:37:35"
            },
            "returnParameters": {
              "id": 27218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27217,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27219,
                  "src": "4427:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27216,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4427:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4426:6:35"
            },
            "scope": 27230,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27229,
            "nodeType": "FunctionDefinition",
            "src": "4756:108:35",
            "nodes": [],
            "documentation": {
              "id": 27220,
              "nodeType": "StructuredDocumentation",
              "src": "4439:312:35",
              "text": " @notice Checks whether a contract implements an ERC165 interface or not without using or updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
            },
            "functionSelector": "b7056765",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165InterfaceNoCache",
            "nameLocation": "4765:32:35",
            "parameters": {
              "id": 27225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27222,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4806:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27229,
                  "src": "4798:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4798:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27224,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4822:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 27229,
                  "src": "4815:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 27223,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4815:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4797:37:35"
            },
            "returnParameters": {
              "id": 27228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27227,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27229,
                  "src": "4858:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27226,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4858:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4857:6:35"
            },
            "scope": 27230,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC1820Registry",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 27143,
          "nodeType": "StructuredDocumentation",
          "src": "149:619:35",
          "text": " @dev Interface of the global ERC1820 Registry, as defined in the\n https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n implementers for interfaces in this registry, as well as query support.\n Implementers may be shared by multiple accounts, and can also implement more\n than a single interface for each account. Contracts can implement interfaces\n for themselves, but externally-owned accounts (EOA) must delegate this to a\n contract.\n {IERC165} interfaces can also be queried via the registry.\n For an in-depth explanation and source code analysis, see the EIP text."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          27230
        ],
        "name": "IERC1820Registry",
        "nameLocation": "779:16:35",
        "scope": 27231,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 35
}