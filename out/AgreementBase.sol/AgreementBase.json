{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_code",
          "type": "uint256"
        }
      ],
      "name": "ONLY_HOST",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "uuid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "name": "CodeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "agreementType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "castrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCodeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "realtimeBalanceOf",
      "outputs": [
        {
          "internalType": "int256",
          "name": "dynamicBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "agreementType()": "7730599e",
    "castrate()": "9903ad38",
    "getCodeAddress()": "50d75d25",
    "proxiableUUID()": "52d1902d",
    "realtimeBalanceOf(address,address,uint256)": "9b2e48bc",
    "updateCode(address)": "46951954"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_code\",\"type\":\"uint256\"}],\"name\":\"ONLY_HOST\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uuid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"name\":\"CodeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"agreementType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"castrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCodeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"dynamicBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{\"agreementType()\":{\"details\":\"Get the type of the agreement class\"},\"getCodeAddress()\":{\"details\":\"Get current implementation code address.\"},\"proxiableUUID()\":{\"details\":\"Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT.\"},\"realtimeBalanceOf(address,address,uint256)\":{\"details\":\"Calculate the real-time balance for the account of this agreement class\",\"params\":{\"account\":\"Account the state belongs to\",\"time\":\"Time used for the calculation\"},\"returns\":{\"deposit\":\"Account deposit amount of this agreement\",\"dynamicBalance\":\"Dynamic balance portion of real-time balance of this agreement\",\"owedDeposit\":\"Account owed deposit amount of this agreement\"}}},\"title\":\"Superfluid agreement base boilerplate contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/agreements/AgreementBase.sol\":\"AgreementBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":protocol-monorepo/=lib/protocol-monorepo/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x99318be83183b499d4f32a6f1a806b087e46622a171630b2d499d7f10a8999c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a0ae547ed1e5d7f24cdbecb771e1274f2bb33965eb74261301655503c42971f\",\"dweb:/ipfs/QmYjHKwb3tj7YveT2R7ADuPacSwoEYdafwAqzRk4dK8kan\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/agreements/AgreementBase.sol\":{\"keccak256\":\"0x55226d79da4c2d6597f420b8b1bb3df321475619a487ff9b18272e4f838e0c12\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://28492238836ad93316906ed420d96fe37ae0077068a26464bb7750e564d68129\",\"dweb:/ipfs/QmT4MzY9T3VNtCkGZeJQNzJagMJQ1RpQa2ZjTTYuYatvM9\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x78f553c8b63ca0b8ca892e3461aeb2d176f0b5e574ae0ea616bbb70d33d5e5f2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f2e9a8f5df9cf5b8326cefa666abc21c41fd09fd4ea3fd73a55b1346fa1693e8\",\"dweb:/ipfs/QmPNrMzHNpE97SwHwjXhHCttKQQSt2oYUforvPenVuemRJ\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0xa94f5ad95da2716a21cf6a0c7861ce03ba70c6931cfc8a9bcae741881e489a99\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://2eee2bae93ce8aae1e75aed6153e3d46f2d0c3462f47d9a99713054fff71bc80\",\"dweb:/ipfs/QmVh5HDeJo3p4rUV45RVCBGFpEN2G3gwL7ADT73csPnj5Q\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol\":{\"keccak256\":\"0x368ba82f761822466ebc49782b99c9eaa2664e7d4582fde1cb38098ee9926f71\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://02984681098e314734e18fc14ffcdbf9cf2bd079fb5735af75c44b5641f0dcf5\",\"dweb:/ipfs/QmedH2QB6VkyJ8Kw1tQC2E8VDF3u23U2eT5tP6VGY1KwBP\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol\":{\"keccak256\":\"0x6dd522f9867e769a945cea48a15d63488cdbd19091ed38adc95b43a70129b349\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://ed451eb0ed865b2d2338269134236d59ceafe4685d4b5df68843924620f6b715\",\"dweb:/ipfs/QmVr7hh9mnmfFzoJd4oXmuSfkXL2a4gdAKoRYXMfe3BFaE\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_code",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ONLY_HOST"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uuid",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "codeAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CodeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "agreementType",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castrate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCodeAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "codeAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISuperfluidToken",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOf",
          "outputs": [
            {
              "internalType": "int256",
              "name": "dynamicBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCode"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "agreementType()": {
            "details": "Get the type of the agreement class"
          },
          "getCodeAddress()": {
            "details": "Get current implementation code address."
          },
          "proxiableUUID()": {
            "details": "Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT."
          },
          "realtimeBalanceOf(address,address,uint256)": {
            "details": "Calculate the real-time balance for the account of this agreement class",
            "params": {
              "account": "Account the state belongs to",
              "time": "Time used for the calculation"
            },
            "returns": {
              "deposit": "Account deposit amount of this agreement",
              "dynamicBalance": "Dynamic balance portion of real-time balance of this agreement",
              "owedDeposit": "Account owed deposit amount of this agreement"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":protocol-monorepo/=lib/protocol-monorepo/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/agreements/AgreementBase.sol": "AgreementBase"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x99318be83183b499d4f32a6f1a806b087e46622a171630b2d499d7f10a8999c5",
        "urls": [
          "bzz-raw://1a0ae547ed1e5d7f24cdbecb771e1274f2bb33965eb74261301655503c42971f",
          "dweb:/ipfs/QmYjHKwb3tj7YveT2R7ADuPacSwoEYdafwAqzRk4dK8kan"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/agreements/AgreementBase.sol": {
        "keccak256": "0x55226d79da4c2d6597f420b8b1bb3df321475619a487ff9b18272e4f838e0c12",
        "urls": [
          "bzz-raw://28492238836ad93316906ed420d96fe37ae0077068a26464bb7750e564d68129",
          "dweb:/ipfs/QmT4MzY9T3VNtCkGZeJQNzJagMJQ1RpQa2ZjTTYuYatvM9"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "keccak256": "0x78f553c8b63ca0b8ca892e3461aeb2d176f0b5e574ae0ea616bbb70d33d5e5f2",
        "urls": [
          "bzz-raw://f2e9a8f5df9cf5b8326cefa666abc21c41fd09fd4ea3fd73a55b1346fa1693e8",
          "dweb:/ipfs/QmPNrMzHNpE97SwHwjXhHCttKQQSt2oYUforvPenVuemRJ"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e",
        "urls": [
          "bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820",
          "dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0xa94f5ad95da2716a21cf6a0c7861ce03ba70c6931cfc8a9bcae741881e489a99",
        "urls": [
          "bzz-raw://2eee2bae93ce8aae1e75aed6153e3d46f2d0c3462f47d9a99713054fff71bc80",
          "dweb:/ipfs/QmVh5HDeJo3p4rUV45RVCBGFpEN2G3gwL7ADT73csPnj5Q"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol": {
        "keccak256": "0x368ba82f761822466ebc49782b99c9eaa2664e7d4582fde1cb38098ee9926f71",
        "urls": [
          "bzz-raw://02984681098e314734e18fc14ffcdbf9cf2bd079fb5735af75c44b5641f0dcf5",
          "dweb:/ipfs/QmedH2QB6VkyJ8Kw1tQC2E8VDF3u23U2eT5tP6VGY1KwBP"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol": {
        "keccak256": "0x6dd522f9867e769a945cea48a15d63488cdbd19091ed38adc95b43a70129b349",
        "urls": [
          "bzz-raw://ed451eb0ed865b2d2338269134236d59ceafe4685d4b5df68843924620f6b715",
          "dweb:/ipfs/QmVr7hh9mnmfFzoJd4oXmuSfkXL2a4gdAKoRYXMfe3BFaE"
        ],
        "license": "AGPLv3"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/agreements/AgreementBase.sol",
    "id": 30624,
    "exportedSymbols": {
      "AgreementBase": [
        30623
      ],
      "ISuperAgreement": [
        43935
      ],
      "SuperfluidErrors": [
        43906
      ],
      "UUPSProxiable": [
        52866
      ]
    },
    "nodeType": "SourceUnit",
    "src": "35:912:40",
    "nodes": [
      {
        "id": 30563,
        "nodeType": "PragmaDirective",
        "src": "35:23:40",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 30565,
        "nodeType": "ImportDirective",
        "src": "60:67:40",
        "nodes": [],
        "absolutePath": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol",
        "file": "../upgradability/UUPSProxiable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30624,
        "sourceUnit": 52867,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30564,
              "name": "UUPSProxiable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52866,
              "src": "69:13:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30567,
        "nodeType": "ImportDirective",
        "src": "128:79:40",
        "nodes": [],
        "absolutePath": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "file": "../interfaces/superfluid/ISuperAgreement.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30624,
        "sourceUnit": 43936,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30566,
              "name": "ISuperAgreement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43935,
              "src": "137:15:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30569,
        "nodeType": "ImportDirective",
        "src": "208:76:40",
        "nodes": [],
        "absolutePath": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
        "file": "../interfaces/superfluid/Definitions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30624,
        "sourceUnit": 43907,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30568,
              "name": "SuperfluidErrors",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43906,
              "src": "217:16:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30623,
        "nodeType": "ContractDefinition",
        "src": "373:573:40",
        "nodes": [
          {
            "id": 30576,
            "nodeType": "VariableDeclaration",
            "src": "453:32:40",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_host",
            "nameLocation": "480:5:40",
            "scope": 30623,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30575,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "453:7:40",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30586,
            "nodeType": "FunctionDefinition",
            "src": "492:59:40",
            "nodes": [],
            "body": {
              "id": 30585,
              "nodeType": "Block",
              "src": "522:29:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30581,
                      "name": "_host",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30576,
                      "src": "532:5:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30582,
                      "name": "host",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30578,
                      "src": "540:4:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "532:12:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 30584,
                  "nodeType": "ExpressionStatement",
                  "src": "532:12:40"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 30579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30578,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "512:4:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 30586,
                  "src": "504:12:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "503:14:40"
            },
            "returnParameters": {
              "id": 30580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:0:40"
            },
            "scope": 30623,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 30599,
            "nodeType": "FunctionDefinition",
            "src": "557:145:40",
            "nodes": [],
            "body": {
              "id": 30598,
              "nodeType": "Block",
              "src": "641:61:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 30593,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "674:4:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AgreementBase_$30623",
                              "typeString": "contract AgreementBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AgreementBase_$30623",
                              "typeString": "contract AgreementBase"
                            }
                          ],
                          "id": 30592,
                          "name": "ISuperAgreement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43935,
                          "src": "658:15:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISuperAgreement_$43935_$",
                            "typeString": "type(contract ISuperAgreement)"
                          }
                        },
                        "id": 30594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "658:21:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperAgreement_$43935",
                          "typeString": "contract ISuperAgreement"
                        }
                      },
                      "id": 30595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "680:13:40",
                      "memberName": "agreementType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43917,
                      "src": "658:35:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 30596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "658:37:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 30591,
                  "id": 30597,
                  "nodeType": "Return",
                  "src": "651:44:40"
                }
              ]
            },
            "baseFunctions": [
              52806
            ],
            "functionSelector": "52d1902d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proxiableUUID",
            "nameLocation": "566:13:40",
            "overrides": {
              "id": 30588,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "602:8:40"
            },
            "parameters": {
              "id": 30587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:2:40"
            },
            "returnParameters": {
              "id": 30591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30590,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30599,
                  "src": "628:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 30589,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "627:9:40"
            },
            "scope": 30623,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30622,
            "nodeType": "FunctionDefinition",
            "src": "708:235:40",
            "nodes": [],
            "body": {
              "id": 30621,
              "nodeType": "Block",
              "src": "778:165:40",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 30608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 30605,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "792:3:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 30606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "796:6:40",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "792:10:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 30607,
                      "name": "_host",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30576,
                      "src": "806:5:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "792:19:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30616,
                  "nodeType": "IfStatement",
                  "src": "788:101:40",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 30612,
                            "name": "SuperfluidErrors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43906,
                            "src": "847:16:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SuperfluidErrors_$43906_$",
                              "typeString": "type(library SuperfluidErrors)"
                            }
                          },
                          "id": 30613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "864:24:40",
                          "memberName": "AGREEMENT_BASE_ONLY_HOST",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43905,
                          "src": "847:41:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 30609,
                          "name": "SuperfluidErrors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43906,
                          "src": "820:16:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SuperfluidErrors_$43906_$",
                            "typeString": "type(library SuperfluidErrors)"
                          }
                        },
                        "id": 30611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "837:9:40",
                        "memberName": "ONLY_HOST",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43799,
                        "src": "820:26:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) pure"
                        }
                      },
                      "id": 30614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "820:69:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 30615,
                    "nodeType": "RevertStatement",
                    "src": "813:76:40"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30618,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30601,
                        "src": "925:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30617,
                      "name": "_updateCodeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52859,
                      "src": "906:18:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:30:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 30604,
                  "id": 30620,
                  "nodeType": "Return",
                  "src": "899:37:40"
                }
              ]
            },
            "baseFunctions": [
              52794
            ],
            "functionSelector": "46951954",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateCode",
            "nameLocation": "717:10:40",
            "overrides": {
              "id": 30603,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "765:8:40"
            },
            "parameters": {
              "id": 30602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30601,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "736:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 30622,
                  "src": "728:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "727:20:40"
            },
            "returnParameters": {
              "id": 30604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "778:0:40"
            },
            "scope": 30623,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 30571,
              "name": "UUPSProxiable",
              "nameLocations": [
                "412:13:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52866,
              "src": "412:13:40"
            },
            "id": 30572,
            "nodeType": "InheritanceSpecifier",
            "src": "412:13:40"
          },
          {
            "baseName": {
              "id": 30573,
              "name": "ISuperAgreement",
              "nameLocations": [
                "431:15:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43935,
              "src": "431:15:40"
            },
            "id": 30574,
            "nodeType": "InheritanceSpecifier",
            "src": "431:15:40"
          }
        ],
        "canonicalName": "AgreementBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 30570,
          "nodeType": "StructuredDocumentation",
          "src": "286:86:40",
          "text": " @title Superfluid agreement base boilerplate contract\n @author Superfluid"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          30623,
          43935,
          52866,
          25286
        ],
        "name": "AgreementBase",
        "nameLocation": "391:13:40",
        "scope": 30624,
        "usedErrors": [
          43799
        ]
      }
    ],
    "license": "AGPLv3"
  },
  "id": 40
}